//------------------------------------------------------------------------------
// <auto-generated>
//     Denne kode blev oprettet ved hjælp af et værktøj.
//     Runtime-version:4.0.30319.42000
//
//     Ændringer af denne fil kan resultere i ukorrekt funktion, og ændringerne mistes, hvis
//     koden oprettes igen.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;

[assembly: ProxyTypesAssembly()]


namespace SharedContext {
    
    
    public interface ICustomer : IEntity {
        
        Guid? Address1_AddressId {
            get;
            set;
        }
        
        string Address1_City {
            get;
            set;
        }
        
        string Address1_Composite {
            get;
        }
        
        string Address1_Country {
            get;
            set;
        }
        
        string Address1_County {
            get;
            set;
        }
        
        string Address1_Fax {
            get;
            set;
        }
        
        double? Address1_Latitude {
            get;
            set;
        }
        
        string Address1_Line1 {
            get;
            set;
        }
        
        string Address1_Line2 {
            get;
            set;
        }
        
        string Address1_Line3 {
            get;
            set;
        }
        
        double? Address1_Longitude {
            get;
            set;
        }
        
        string Address1_Name {
            get;
            set;
        }
        
        string Address1_PostalCode {
            get;
            set;
        }
        
        string Address1_PostOfficeBox {
            get;
            set;
        }
        
        string Address1_PrimaryContactName {
            get;
            set;
        }
        
        string Address1_StateOrProvince {
            get;
            set;
        }
        
        string Address1_Telephone1 {
            get;
            set;
        }
        
        string Address1_Telephone2 {
            get;
            set;
        }
        
        string Address1_Telephone3 {
            get;
            set;
        }
        
        string Address1_UPSZone {
            get;
            set;
        }
        
        int? Address1_UTCOffset {
            get;
            set;
        }
        
        Guid? Address2_AddressId {
            get;
            set;
        }
        
        string Address2_City {
            get;
            set;
        }
        
        string Address2_Composite {
            get;
        }
        
        string Address2_Country {
            get;
            set;
        }
        
        string Address2_County {
            get;
            set;
        }
        
        string Address2_Fax {
            get;
            set;
        }
        
        double? Address2_Latitude {
            get;
            set;
        }
        
        string Address2_Line1 {
            get;
            set;
        }
        
        string Address2_Line2 {
            get;
            set;
        }
        
        string Address2_Line3 {
            get;
            set;
        }
        
        double? Address2_Longitude {
            get;
            set;
        }
        
        string Address2_Name {
            get;
            set;
        }
        
        string Address2_PostalCode {
            get;
            set;
        }
        
        string Address2_PostOfficeBox {
            get;
            set;
        }
        
        string Address2_PrimaryContactName {
            get;
            set;
        }
        
        string Address2_StateOrProvince {
            get;
            set;
        }
        
        string Address2_Telephone1 {
            get;
            set;
        }
        
        string Address2_Telephone2 {
            get;
            set;
        }
        
        string Address2_Telephone3 {
            get;
            set;
        }
        
        string Address2_UPSZone {
            get;
            set;
        }
        
        int? Address2_UTCOffset {
            get;
            set;
        }
        
        string Adx_CreatedByIPAddress {
            get;
            set;
        }
        
        string Adx_CreatedByUsername {
            get;
            set;
        }
        
        string Adx_ModifiedByIPAddress {
            get;
            set;
        }
        
        string Adx_ModifiedByUsername {
            get;
            set;
        }
        
        decimal? Aging30 {
            get;
        }
        
        decimal? Aging30_Base {
            get;
        }
        
        decimal? Aging60 {
            get;
        }
        
        decimal? Aging60_Base {
            get;
        }
        
        decimal? Aging90 {
            get;
        }
        
        decimal? Aging90_Base {
            get;
        }
        
        EntityReference CreatedBy {
            get;
        }
        
        EntityReference CreatedByExternalParty {
            get;
        }
        
        DateTime? CreatedOn {
            get;
        }
        
        EntityReference CreatedOnBehalfBy {
            get;
        }
        
        decimal? CreditLimit {
            get;
            set;
        }
        
        decimal? CreditLimit_Base {
            get;
        }
        
        bool? CreditOnHold {
            get;
            set;
        }
        
        string Description {
            get;
            set;
        }
        
        bool? DoNotBulkEMail {
            get;
            set;
        }
        
        bool? DoNotBulkPostalMail {
            get;
            set;
        }
        
        bool? DoNotEMail {
            get;
            set;
        }
        
        bool? DoNotFax {
            get;
            set;
        }
        
        bool? DoNotPhone {
            get;
            set;
        }
        
        bool? DoNotPostalMail {
            get;
            set;
        }
        
        bool? DoNotSendMM {
            get;
            set;
        }
        
        string EMailAddress1 {
            get;
            set;
        }
        
        string EMailAddress2 {
            get;
            set;
        }
        
        string EMailAddress3 {
            get;
            set;
        }
        
        Guid? EntityImageId {
            get;
        }
        
        decimal? ExchangeRate {
            get;
        }
        
        string Fax {
            get;
            set;
        }
        
        bool? FollowEmail {
            get;
            set;
        }
        
        int? ImportSequenceNumber {
            get;
            set;
        }
        
        DateTime? LastOnHoldTime {
            get;
            set;
        }
        
        DateTime? LastUsedInCampaign {
            get;
            set;
        }
        
        bool? MarketingOnly {
            get;
            set;
        }
        
        EntityReference MasterId {
            get;
        }
        
        bool? Merged {
            get;
        }
        
        EntityReference ModifiedBy {
            get;
        }
        
        EntityReference ModifiedByExternalParty {
            get;
        }
        
        DateTime? ModifiedOn {
            get;
        }
        
        EntityReference ModifiedOnBehalfBy {
            get;
        }
        
        EntityReference msa_managingpartnerid {
            get;
            set;
        }
        
        int? OnHoldTime {
            get;
        }
        
        DateTime? OverriddenCreatedOn {
            get;
            set;
        }
        
        EntityReference OwnerId {
            get;
            set;
        }
        
        EntityReference OwningBusinessUnit {
            get;
        }
        
        EntityReference OwningTeam {
            get;
        }
        
        EntityReference OwningUser {
            get;
        }
        
        bool? ParticipatesInWorkflow {
            get;
            set;
        }
        
        EntityReference PreferredSystemUserId {
            get;
            set;
        }
        
        Guid? ProcessId {
            get;
            set;
        }
        
        EntityReference SLAId {
            get;
            set;
        }
        
        EntityReference SLAInvokedId {
            get;
        }
        
        Guid? StageId {
            get;
            set;
        }
        
        string Telephone1 {
            get;
            set;
        }
        
        string Telephone2 {
            get;
            set;
        }
        
        string Telephone3 {
            get;
            set;
        }
        
        string TimeSpentByMeOnEmailAndMeetings {
            get;
        }
        
        int? TimeZoneRuleVersionNumber {
            get;
            set;
        }
        
        EntityReference TransactionCurrencyId {
            get;
            set;
        }
        
        string TraversedPath {
            get;
            set;
        }
        
        int? UTCConversionTimeZoneCode {
            get;
            set;
        }
        
        long? VersionNumber {
            get;
        }
    }
    
    /// <summary>
    /// <para>#Basistabeller En virksomhed, kan f.eks. være en arbejdsplads eller en uddannelsesinstitution.</para>
    /// <para>Display Name: Firma</para>
    /// </summary>
    [EntityLogicalName("account")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Account : ExtendedEntity<AccountState, Account_StatusCode>, ICustomer {
        
        public const string EntityLogicalName = "account";
        
        public const int EntityTypeCode = 1;
        
        public Account() : 
                base(EntityLogicalName) {
        }
        
        public Account(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("accountid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("accountid", value);
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for firmaet.</para>
        /// <para>Display Name: Firma</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Firma")]
        public Guid? AccountId {
            get {
                return GetAttributeValue<Guid?>("accountid");
            }
            set {
                SetId("accountid", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg en kategori for at angive, om kundekontoen er standard eller foretrukket.</para>
        /// <para>Display Name: Kategori</para>
        /// </summary>
        [AttributeLogicalName("accountcategorycode")]
        [DisplayName("Kategori")]
        public Account_AccountCategoryCode? AccountCategoryCode {
            get {
                return GetOptionSetValue<Account_AccountCategoryCode>("accountcategorycode");
            }
            set {
                SetOptionSetValue("accountcategorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg en klassifikationskode for at angive kundekontoens potentielle værdi baseret på forventet afkast, samarbejdsniveau, salgscyklussens længde eller andre kriterier.</para>
        /// <para>Display Name: Klassificering</para>
        /// </summary>
        [AttributeLogicalName("accountclassificationcode")]
        [DisplayName("Klassificering")]
        public Account_AccountClassificationCode? AccountClassificationCode {
            get {
                return GetOptionSetValue<Account_AccountClassificationCode>("accountclassificationcode");
            }
            set {
                SetOptionSetValue("accountclassificationcode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et id-nummer eller en kode for firmaet for hurtigt at søge efter og identificere firmaet i systemvisninger.</para>
        /// <para>Display Name: Enhedsnummer</para>
        /// </summary>
        [AttributeLogicalName("accountnumber")]
        [DisplayName("Enhedsnummer")]
        [MaxLength(20)]
        public string AccountNumber {
            get {
                return GetAttributeValue<string>("accountnumber");
            }
            set {
                SetAttributeValue("accountnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg en klassificering for at angive kundekontoens værdi.</para>
        /// <para>Display Name: Firmaklassificering</para>
        /// </summary>
        [AttributeLogicalName("accountratingcode")]
        [DisplayName("Firmaklassificering")]
        public Account_AccountRatingCode? AccountRatingCode {
            get {
                return GetOptionSetValue<Account_AccountRatingCode>("accountratingcode");
            }
            set {
                SetOptionSetValue("accountratingcode", value);
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for adresse 1.</para>
        /// <para>Display Name: Adresse 1: Id</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Adresse 1: Id")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den primære adressetype.</para>
        /// <para>Display Name: Adresse 1: Adressetype</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Adresse 1: Adressetype")]
        public Account_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<Account_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv byen for den primære adresse.</para>
        /// <para>Display Name: Adresse 1: By</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("Adresse 1: By")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Viser den fulde primære adresse.</para>
        /// <para>Display Name: Adresse 1</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Adresse 1")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Angiv landet eller området for den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Land/område</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Adresse 1: Land/område")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv regionen for den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Region</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Adresse 1: Region")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv det faxnummer, der er tilknyttet den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Adresse 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg fragtbetingelser for den primære adresse for at sikre, at forsendelsesordrer behandles korrekt.</para>
        /// <para>Display Name: Adresse 1: Fragtbetingelser</para>
        /// </summary>
        [AttributeLogicalName("address1_freighttermscode")]
        [DisplayName("Adresse 1: Fragtbetingelser")]
        public Account_Address1_FreightTermsCode? Address1_FreightTermsCode {
            get {
                return GetOptionSetValue<Account_Address1_FreightTermsCode>("address1_freighttermscode");
            }
            set {
                SetOptionSetValue("address1_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv værdien for breddegraden for den primære adresse til brug ved kortlægning og andre programmer.</para>
        /// <para>Display Name: Adresse 1: Breddegrad</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Adresse 1: Breddegrad")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den første linje i den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Gade 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Adresse 1: Gade 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den anden linje i den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Gade 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Adresse 1: Gade 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den tredje linje i den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Gade 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Adresse 1: Gade 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv værdien for længdegraden for den primære adresse til brug ved kortlægning og andre programmer.</para>
        /// <para>Display Name: Adresse 1: Længdegrad</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Adresse 1: Længdegrad")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et beskrivende navn til den primære adresse, f.eks. koncernhovedsæde.</para>
        /// <para>Display Name: Adresse 1: Navn</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Adresse 1: Navn")]
        [MaxLength(200)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv postboksnummeret for den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Postboksnummer</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Adresse 1: Postboksnummer")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv postnummeret for den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Postnummer</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("Adresse 1: Postnummer")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv navnet på hovedkontakten på firmaets primære adresse.</para>
        /// <para>Display Name: Adresse 1: Navn på primær kontaktperson</para>
        /// </summary>
        [AttributeLogicalName("address1_primarycontactname")]
        [DisplayName("Adresse 1: Navn på primær kontaktperson")]
        [MaxLength(100)]
        public string Address1_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address1_primarycontactname");
            }
            set {
                SetAttributeValue("address1_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg en forsendelsesmetode til leverancer, der sendes til denne adresse.</para>
        /// <para>Display Name: Adresse 1: Forsendelsesmåde</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Adresse 1: Forsendelsesmåde")]
        public Account_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv staten eller området for den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Område</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("Adresse 1: Område")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv det hovedtelefonnummer, der er tilknyttet den primære adresse.</para>
        /// <para>Display Name: Adresse – telefon</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Adresse – telefon")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et andet telefonnummer, der er tilknyttet den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Telefon 2</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Adresse 1: Telefon 2")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et tredje telefonnummer, der er tilknyttet den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Telefon 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Adresse 1: Telefon 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv UPS-zonen for den primære adresse for at sikre, at forsendelsesgebyrer beregnes korrekt, og at leverancer foretages prompte, hvis forsendelse sker med UPS.</para>
        /// <para>Display Name: Adresse 1: UPS-zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Adresse 1: UPS-zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg tidszonen, eller forskydningen fra GMT, for denne adresse, så andre kan referere til den, når de kontakter nogen på denne adresse.</para>
        /// <para>Display Name: Adresse 1: Forskydning fra GMT</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Adresse 1: Forskydning fra GMT")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for adresse 2.</para>
        /// <para>Display Name: Adresse 2: Id</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Adresse 2: Id")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den sekundære adressetype.</para>
        /// <para>Display Name: Adresse 2: Adressetype</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Adresse 2: Adressetype")]
        public Account_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<Account_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv byen for den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: By</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Adresse 2: By")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Viser den fulde sekundære adresse.</para>
        /// <para>Display Name: Adresse 2</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Adresse 2")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Angiv landet eller området for den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Land/område</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Adresse 2: Land/område")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv regionen for den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Region</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Adresse 2: Region")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv det faxnummer, der er tilknyttet den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Adresse 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg fragtbetingelser for den sekundære adresse for at sikre, at forsendelsesordrer behandles korrekt.</para>
        /// <para>Display Name: Adresse 2: Fragtbetingelser</para>
        /// </summary>
        [AttributeLogicalName("address2_freighttermscode")]
        [DisplayName("Adresse 2: Fragtbetingelser")]
        public Account_Address2_FreightTermsCode? Address2_FreightTermsCode {
            get {
                return GetOptionSetValue<Account_Address2_FreightTermsCode>("address2_freighttermscode");
            }
            set {
                SetOptionSetValue("address2_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv værdien for breddegraden for den sekundære adresse til brug ved kortlægning og andre programmer.</para>
        /// <para>Display Name: Adresse 2: Breddegrad</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Adresse 2: Breddegrad")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den første linje i den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Gade 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Adresse 2: Gade 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den anden linje i den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Gade 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Adresse 2: Gade 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den tredje linje i den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Gade 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Adresse 2: Gade 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv værdien for længdegraden for den sekundære adresse til brug ved kortlægning og andre programmer.</para>
        /// <para>Display Name: Adresse 2: Længdegrad</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Adresse 2: Længdegrad")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et beskrivende navn til den sekundære adresse, f.eks. koncernhovedsæde.</para>
        /// <para>Display Name: Adresse 2: Navn</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Adresse 2: Navn")]
        [MaxLength(200)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv postboksnummeret for den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Postboksnummer</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Adresse 2: Postboksnummer")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv postnummeret for den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Postnummer</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Adresse 2: Postnummer")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv navnet på hovedkontakten på firmaets sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Navn på primær kontaktperson</para>
        /// </summary>
        [AttributeLogicalName("address2_primarycontactname")]
        [DisplayName("Adresse 2: Navn på primær kontaktperson")]
        [MaxLength(100)]
        public string Address2_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address2_primarycontactname");
            }
            set {
                SetAttributeValue("address2_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg en forsendelsesmetode til leverancer, der sendes til denne adresse.</para>
        /// <para>Display Name: Adresse 2: Forsendelsesmåde</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Adresse 2: Forsendelsesmåde")]
        public Account_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv staten eller området for den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Område</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Adresse 2: Område")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv det hovedtelefonnummer, der er tilknyttet den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Telefon 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Adresse 2: Telefon 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et andet telefonnummer, der er tilknyttet den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Telefon 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Adresse 2: Telefon 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et tredje telefonnummer, der er tilknyttet den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Telefon 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Adresse 2: Telefon 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv UPS-zonen for den sekundære adresse for at sikre, at forsendelsesgebyrer beregnes korrekt, og at leverancer foretages prompte, hvis forsendelse sker med UPS.</para>
        /// <para>Display Name: Adresse 2: UPS-zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Adresse 2: UPS-zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg tidszonen, eller forskydningen fra GMT, for denne adresse, så andre kan referere til den, når de kontakter nogen på denne adresse.</para>
        /// <para>Display Name: Adresse 2: Forskydning fra GMT</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Adresse 2: Forskydning fra GMT")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Created By (IP Address)</para>
        /// </summary>
        [AttributeLogicalName("adx_createdbyipaddress")]
        [DisplayName("Created By (IP Address)")]
        [MaxLength(100)]
        public string Adx_CreatedByIPAddress {
            get {
                return GetAttributeValue<string>("adx_createdbyipaddress");
            }
            set {
                SetAttributeValue("adx_createdbyipaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Created By (User Name)</para>
        /// </summary>
        [AttributeLogicalName("adx_createdbyusername")]
        [DisplayName("Created By (User Name)")]
        [MaxLength(100)]
        public string Adx_CreatedByUsername {
            get {
                return GetAttributeValue<string>("adx_createdbyusername");
            }
            set {
                SetAttributeValue("adx_createdbyusername", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Modified By (IP Address)</para>
        /// </summary>
        [AttributeLogicalName("adx_modifiedbyipaddress")]
        [DisplayName("Modified By (IP Address)")]
        [MaxLength(100)]
        public string Adx_ModifiedByIPAddress {
            get {
                return GetAttributeValue<string>("adx_modifiedbyipaddress");
            }
            set {
                SetAttributeValue("adx_modifiedbyipaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Modified By (User Name)</para>
        /// </summary>
        [AttributeLogicalName("adx_modifiedbyusername")]
        [DisplayName("Modified By (User Name)")]
        [MaxLength(100)]
        public string Adx_ModifiedByUsername {
            get {
                return GetAttributeValue<string>("adx_modifiedbyusername");
            }
            set {
                SetAttributeValue("adx_modifiedbyusername", value);
            }
        }
        
        /// <summary>
        /// <para>Kun til systembrug.</para>
        /// <para>Display Name: Aldersfordeling 30</para>
        /// </summary>
        [AttributeLogicalName("aging30")]
        [DisplayName("Aldersfordeling 30")]
        public decimal? Aging30 {
            get {
                return GetMoneyValue("aging30");
            }
        }
        
        /// <summary>
        /// <para>Feltet Aldersfordeling 30 angivet i grundvaluta.</para>
        /// <para>Display Name: Aldersfordeling 30 (grund)</para>
        /// </summary>
        [AttributeLogicalName("aging30_base")]
        [DisplayName("Aldersfordeling 30 (grund)")]
        public decimal? Aging30_Base {
            get {
                return GetMoneyValue("aging30_base");
            }
        }
        
        /// <summary>
        /// <para>Kun til systembrug.</para>
        /// <para>Display Name: Aldersfordeling 60</para>
        /// </summary>
        [AttributeLogicalName("aging60")]
        [DisplayName("Aldersfordeling 60")]
        public decimal? Aging60 {
            get {
                return GetMoneyValue("aging60");
            }
        }
        
        /// <summary>
        /// <para>Feltet Aldersfordeling 60 angivet i grundvaluta.</para>
        /// <para>Display Name: Aldersfordeling 60 (grund)</para>
        /// </summary>
        [AttributeLogicalName("aging60_base")]
        [DisplayName("Aldersfordeling 60 (grund)")]
        public decimal? Aging60_Base {
            get {
                return GetMoneyValue("aging60_base");
            }
        }
        
        /// <summary>
        /// <para>Kun til systembrug.</para>
        /// <para>Display Name: Aldersfordeling 90</para>
        /// </summary>
        [AttributeLogicalName("aging90")]
        [DisplayName("Aldersfordeling 90")]
        public decimal? Aging90 {
            get {
                return GetMoneyValue("aging90");
            }
        }
        
        /// <summary>
        /// <para>Feltet Aldersfordeling 90 angivet i grundvaluta.</para>
        /// <para>Display Name: Aldersfordeling 90 (grund)</para>
        /// </summary>
        [AttributeLogicalName("aging90_base")]
        [DisplayName("Aldersfordeling 90 (grund)")]
        public decimal? Aging90_Base {
            get {
                return GetMoneyValue("aging90_base");
            }
        }
        
        /// <summary>
        /// <para>Vælg den juridiske angivelse eller en anden forretningstype for firmaet i forbindelse med kontrakter eller rapportering.</para>
        /// <para>Display Name: Forretningstype</para>
        /// </summary>
        [AttributeLogicalName("businesstypecode")]
        [DisplayName("Forretningstype")]
        public Account_BusinessTypeCode? BusinessTypeCode {
            get {
                return GetOptionSetValue<Account_BusinessTypeCode>("businesstypecode");
            }
            set {
                SetOptionSetValue("businesstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Viser, hvem der har oprettet posten.</para>
        /// <para>Display Name: Oprettet af</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Oprettet af")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Viser den eksterne part, der oprettede posten.</para>
        /// <para>Display Name: Oprettet af (ekstern part)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Oprettet af (ekstern part)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Viser dato og klokkeslæt for oprettelse af posten. Datoen og klokkeslættet vises i den tidszone, der er valgt i indstillingerne i Microsoft Dynamics 365.</para>
        /// <para>Display Name: Oprettet</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Oprettet")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Viser, hvem der oprettede posten på vegne af en anden bruger.</para>
        /// <para>Display Name: Oprettet af (stedfortræder)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Oprettet af (stedfortræder)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Angiv kreditgrænsen for firmaet. Dette er en nyttig reference, når du håndterer faktura- og regnskabsproblemer over for kunden.</para>
        /// <para>Display Name: Kreditgrænse</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        [DisplayName("Kreditgrænse")]
        public decimal? CreditLimit {
            get {
                return GetMoneyValue("creditlimit");
            }
            set {
                SetMoneyValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Viser kreditgrænsen konverteret til systemets standardgrundvaluta i forbindelse med rapportering.</para>
        /// <para>Display Name: Kreditgrænse (grund)</para>
        /// </summary>
        [AttributeLogicalName("creditlimit_base")]
        [DisplayName("Kreditgrænse (grund)")]
        public decimal? CreditLimit_Base {
            get {
                return GetMoneyValue("creditlimit_base");
            }
        }
        
        /// <summary>
        /// <para>Vælg, om firmaets kredit er sat i venteposition. Dette er en nyttig reference ved håndtering af faktura- og regnskabsproblemer over for kunden.</para>
        /// <para>Display Name: Kreditstop</para>
        /// </summary>
        [AttributeLogicalName("creditonhold")]
        [DisplayName("Kreditstop")]
        public bool? CreditOnHold {
            get {
                return GetAttributeValue<bool?>("creditonhold");
            }
            set {
                SetAttributeValue("creditonhold", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg firmaets størrelseskategori eller størrelsesinterval i forbindelse med segmentering og rapportering.</para>
        /// <para>Display Name: Kundestørrelse</para>
        /// </summary>
        [AttributeLogicalName("customersizecode")]
        [DisplayName("Kundestørrelse")]
        public Account_CustomerSizeCode? CustomerSizeCode {
            get {
                return GetOptionSetValue<Account_CustomerSizeCode>("customersizecode");
            }
            set {
                SetOptionSetValue("customersizecode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den kategori, der bedst beskriver relationen mellem firmaet og din organisation.</para>
        /// <para>Display Name: Relationstype</para>
        /// </summary>
        [AttributeLogicalName("customertypecode")]
        [DisplayName("Relationstype")]
        public Account_CustomerTypeCode? CustomerTypeCode {
            get {
                return GetOptionSetValue<Account_CustomerTypeCode>("customertypecode");
            }
            set {
                SetOptionSetValue("customertypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv flere oplysninger for at beskrive firmaet, f.eks. et uddrag fra firmaets websted.</para>
        /// <para>Display Name: Beskrivelse</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Beskrivelse")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om firmaet tillader masseforsendelser af e-mails via kampagner. Hvis Tillad ikke er valgt, kan firmaet tilføjes på marketinglister, men er udelukket fra e-mail.</para>
        /// <para>Display Name: Tillad ikke e-mail-masseforsend.</para>
        /// </summary>
        [AttributeLogicalName("donotbulkemail")]
        [DisplayName("Tillad ikke e-mail-masseforsend.")]
        public bool? DoNotBulkEMail {
            get {
                return GetAttributeValue<bool?>("donotbulkemail");
            }
            set {
                SetAttributeValue("donotbulkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om firmaet tillader masseforsendelser af almindelig post via marketingkampagner eller lynkampagner. Hvis Tillad ikke er valgt, kan firmaet tilføjes på marketinglisten, men er udelukket fra almindelig post.</para>
        /// <para>Display Name: Tillad ikke masseforsendelse</para>
        /// </summary>
        [AttributeLogicalName("donotbulkpostalmail")]
        [DisplayName("Tillad ikke masseforsendelse")]
        public bool? DoNotBulkPostalMail {
            get {
                return GetAttributeValue<bool?>("donotbulkpostalmail");
            }
            set {
                SetAttributeValue("donotbulkpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om firmaet tillader, at der sendes direct mail fra Microsoft Dynamics 365.</para>
        /// <para>Display Name: Tillad ikke e-mails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        [DisplayName("Tillad ikke e-mails")]
        public bool? DoNotEMail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
            set {
                SetAttributeValue("donotemail", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om firmaet tillader faxer. Hvis Tillad ikke er valgt, udelukkes firmaet fra faxaktiviteter, der distribueres i marketingkampagner.</para>
        /// <para>Display Name: Tillad ikke faxer</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        [DisplayName("Tillad ikke faxer")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
            set {
                SetAttributeValue("donotfax", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om firmaet tillader telefonopkald. Hvis Tillad ikke er valgt, udelukkes firmaet fra telefonopkaldsaktiviteter, der distribueres i marketingkampagner.</para>
        /// <para>Display Name: Tillad ikke telefonopkald</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        [DisplayName("Tillad ikke telefonopkald")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
            set {
                SetAttributeValue("donotphone", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om firmaet tillader direct mail. Hvis Tillad ikke er valgt, udelukkes firmaet fra brevaktiviteter, der distribueres i marketingkampagner.</para>
        /// <para>Display Name: Tillad ikke post</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        [DisplayName("Tillad ikke post")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
            set {
                SetAttributeValue("donotpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om firmaet accepterer marketingmateriale som f.eks. brochurer eller kataloger.</para>
        /// <para>Display Name: Marketingmatr.</para>
        /// </summary>
        [AttributeLogicalName("donotsendmm")]
        [DisplayName("Marketingmatr.")]
        public bool? DoNotSendMM {
            get {
                return GetAttributeValue<bool?>("donotsendmm");
            }
            set {
                SetAttributeValue("donotsendmm", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv firmaets primære e-mail-adresse.</para>
        /// <para>Display Name: Mail</para>
        /// </summary>
        [AttributeLogicalName("emailaddress1")]
        [DisplayName("Mail")]
        [MaxLength(100)]
        public string EMailAddress1 {
            get {
                return GetAttributeValue<string>("emailaddress1");
            }
            set {
                SetAttributeValue("emailaddress1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv firmaets sekundære e-mail-adresse.</para>
        /// <para>Display Name: Mailadresse 2</para>
        /// </summary>
        [AttributeLogicalName("emailaddress2")]
        [DisplayName("Mailadresse 2")]
        [MaxLength(100)]
        public string EMailAddress2 {
            get {
                return GetAttributeValue<string>("emailaddress2");
            }
            set {
                SetAttributeValue("emailaddress2", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv firmaets alternative e-mail-adresse.</para>
        /// <para>Display Name: Mailadresse 3</para>
        /// </summary>
        [AttributeLogicalName("emailaddress3")]
        [DisplayName("Mailadresse 3")]
        [MaxLength(100)]
        public string EMailAddress3 {
            get {
                return GetAttributeValue<string>("emailaddress3");
            }
            set {
                SetAttributeValue("emailaddress3", value);
            }
        }
        
        /// <summary>
        /// <para>Kun til intern brug.</para>
        /// <para>Display Name: Id for objektbillede</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Id for objektbillede")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Viser omregningskursen for postens valuta. Valutakursen bruges til at konvertere alle pengefelter i posten fra den lokale valuta til systemets standardvaluta.</para>
        /// <para>Display Name: Valutakurs</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Valutakurs")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Angiv firmaets faxnummer.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        [DisplayName("Fax")]
        [MaxLength(50)]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Oplysninger om, hvorvidt følgende mailaktivitet som åbninger, visning af vedhæftede filer og klik på links skal tillades for mails, der sendes til firmaet.</para>
        /// <para>Display Name: Følg mailaktivitet</para>
        /// </summary>
        [AttributeLogicalName("followemail")]
        [DisplayName("Følg mailaktivitet")]
        public bool? FollowEmail {
            get {
                return GetAttributeValue<bool?>("followemail");
            }
            set {
                SetAttributeValue("followemail", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv URL-adressen til firmaets FTP-websted, for at brugerne kan få adgang til data og dele dokumenter.</para>
        /// <para>Display Name: FTP-sted</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        [DisplayName("FTP-sted")]
        [MaxLength(200)]
        public string FtpSiteURL {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for den dataimport eller dataoverførsel, der oprettede denne post.</para>
        /// <para>Display Name: Importsekvensnummer</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Importsekvensnummer")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg firmaets primære branche til brug ved marketingsegmentering og demografiske analyser.</para>
        /// <para>Display Name: Branche</para>
        /// </summary>
        [AttributeLogicalName("industrycode")]
        [DisplayName("Branche")]
        public Account_IndustryCode? IndustryCode {
            get {
                return GetOptionSetValue<Account_IndustryCode>("industrycode");
            }
            set {
                SetOptionSetValue("industrycode", value);
            }
        }
        
        /// <summary>
        /// <para>Indeholder dato- og klokkeslætsstemplet for den seneste tid for I venteposition.</para>
        /// <para>Display Name: Seneste tid i venteposition</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Seneste tid i venteposition")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Viser den dato, hvor firmaet sidst var inkluderet i en marketingkampagne eller lynkampagne.</para>
        /// <para>Display Name: Seneste dato i kampagnen</para>
        /// </summary>
        [AttributeLogicalName("lastusedincampaign")]
        [DisplayName("Seneste dato i kampagnen")]
        public DateTime? LastUsedInCampaign {
            get {
                return GetAttributeValue<DateTime?>("lastusedincampaign");
            }
            set {
                SetAttributeValue("lastusedincampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv firmaets markedskapitalisering for at identificere firmaets egenkapital. Bruges som indikator i analyser af det økonomiske resultat.</para>
        /// <para>Display Name: Markedskapitalisering</para>
        /// </summary>
        [AttributeLogicalName("marketcap")]
        [DisplayName("Markedskapitalisering")]
        public decimal? MarketCap {
            get {
                return GetMoneyValue("marketcap");
            }
            set {
                SetMoneyValue("marketcap", value);
            }
        }
        
        /// <summary>
        /// <para>Viser markedskapitaliseringen konverteret til systemets standardgrundvaluta.</para>
        /// <para>Display Name: Markedskapitalisering (grund)</para>
        /// </summary>
        [AttributeLogicalName("marketcap_base")]
        [DisplayName("Markedskapitalisering (grund)")]
        public decimal? MarketCap_Base {
            get {
                return GetMoneyValue("marketcap_base");
            }
        }
        
        /// <summary>
        /// <para>Angiver, om det kun er til marketingbrug</para>
        /// <para>Display Name: Kun marketing</para>
        /// </summary>
        [AttributeLogicalName("marketingonly")]
        [DisplayName("Kun marketing")]
        public bool? MarketingOnly {
            get {
                return GetAttributeValue<bool?>("marketingonly");
            }
            set {
                SetAttributeValue("marketingonly", value);
            }
        }
        
        /// <summary>
        /// <para>Viser det hovedfirma, som firmaet er blevet flettet med.</para>
        /// <para>Display Name: Master-id</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        [DisplayName("Master-id")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
        }
        
        /// <summary>
        /// <para>Viser, om firmaet er blevet flettet med et andet firma.</para>
        /// <para>Display Name: Flettet</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        [DisplayName("Flettet")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Viser, hvem der sidst har opdateret posten.</para>
        /// <para>Display Name: Ændret af</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Ændret af")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Viser den eksterne part, der ændrede posten.</para>
        /// <para>Display Name: Ændret af (ekstern part)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Ændret af (ekstern part)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Viser dato og klokkeslæt for den seneste opdatering af posten. Datoen og klokkeslættet vises i den tidszone, der er valgt i indstillingerne i Microsoft Dynamics 365.</para>
        /// <para>Display Name: Ændret</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Ændret")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Viser, hvem der oprettede posten på vegne af en anden bruger.</para>
        /// <para>Display Name: Ændret af (stedfortræder)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Ændret af (stedfortræder)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Angiv firma- eller forretningsnavnet.</para>
        /// <para>Display Name: Firmanavn</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Firmanavn")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv antallet af medarbejdere, der arbejder i firmaet, til brug ved marketingsegmentering og demografiske analyser.</para>
        /// <para>Display Name: Antal medarbejdere</para>
        /// </summary>
        [AttributeLogicalName("numberofemployees")]
        [DisplayName("Antal medarbejdere")]
        [Range(0, 1000000000)]
        public int? NumberOfEmployees {
            get {
                return GetAttributeValue<int?>("numberofemployees");
            }
            set {
                SetAttributeValue("numberofemployees", value);
            }
        }
        
        /// <summary>
        /// <para>Viser, hvor længe posten var i venteposition i minutter.</para>
        /// <para>Display Name: Tid for I venteposition (minutter)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("Tid for I venteposition (minutter)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Dato og klokkeslæt for overførsel af posten.</para>
        /// <para>Display Name: Posten blev oprettet den</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Posten blev oprettet den")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den bruger eller det team, der er tildelt til at administrere posten. Dette felt opdateres, hver gang posten tildeles en ny bruger.</para>
        /// <para>Display Name: Ejer</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Ejer")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg firmaets ejerskabsstruktur, f.eks. offentlig eller privat.</para>
        /// <para>Display Name: Ejerskab</para>
        /// </summary>
        [AttributeLogicalName("ownershipcode")]
        [DisplayName("Ejerskab")]
        public Account_OwnershipCode? OwnershipCode {
            get {
                return GetOptionSetValue<Account_OwnershipCode>("ownershipcode");
            }
            set {
                SetOptionSetValue("ownershipcode", value);
            }
        }
        
        /// <summary>
        /// <para>Viser den afdeling, som postejeren tilhører.</para>
        /// <para>Display Name: Ejende afdeling</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Ejende afdeling")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for det team, der ejer firmaet.</para>
        /// <para>Display Name: Ejende team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Ejende team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for den bruger, der ejer firmaet.</para>
        /// <para>Display Name: Ejende bruger</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Ejende bruger")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Vælg det overordnede firma, der er tilknyttet dette firma, for at vise overordnede og underordnede forretninger i rapportering og analyser.</para>
        /// <para>Display Name: Overordnet firma</para>
        /// </summary>
        [AttributeLogicalName("parentaccountid")]
        [DisplayName("Overordnet firma")]
        public EntityReference ParentAccountId {
            get {
                return GetAttributeValue<EntityReference>("parentaccountid");
            }
            set {
                SetAttributeValue("parentaccountid", value);
            }
        }
        
        /// <summary>
        /// <para>Kun til systembrug. Ældre Microsoft Dynamics CRM 3.0-arbejdsprocesdata.</para>
        /// <para>Display Name: Deltager i arbejdsproces</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        [DisplayName("Deltager i arbejdsproces")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg betalingsbetingelserne for at angive, hvornår kunden skal betale det samlede beløb.</para>
        /// <para>Display Name: Bet.betingelser</para>
        /// </summary>
        [AttributeLogicalName("paymenttermscode")]
        [DisplayName("Bet.betingelser")]
        public Account_PaymentTermsCode? PaymentTermsCode {
            get {
                return GetOptionSetValue<Account_PaymentTermsCode>("paymenttermscode");
            }
            set {
                SetOptionSetValue("paymenttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den foretrukne ugedag til serviceaftaler.</para>
        /// <para>Display Name: Foretrukket dag</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmentdaycode")]
        [DisplayName("Foretrukket dag")]
        public Account_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
            get {
                return GetOptionSetValue<Account_PreferredAppointmentDayCode>("preferredappointmentdaycode");
            }
            set {
                SetOptionSetValue("preferredappointmentdaycode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg det foretrukne tidspunkt til serviceaftaler.</para>
        /// <para>Display Name: Foretrukket klokkeslæt</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmenttimecode")]
        [DisplayName("Foretrukket klokkeslæt")]
        public Account_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
            get {
                return GetOptionSetValue<Account_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
            }
            set {
                SetOptionSetValue("preferredappointmenttimecode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den foretrukne kontaktmetode.</para>
        /// <para>Display Name: Foretrukken kontaktmetode</para>
        /// </summary>
        [AttributeLogicalName("preferredcontactmethodcode")]
        [DisplayName("Foretrukken kontaktmetode")]
        public Account_PreferredContactMethodCode? PreferredContactMethodCode {
            get {
                return GetOptionSetValue<Account_PreferredContactMethodCode>("preferredcontactmethodcode");
            }
            set {
                SetOptionSetValue("preferredcontactmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den foretrukne serviceremedarbejder som reference, når du planlægger serviceaktiviteter for firmaet.</para>
        /// <para>Display Name: Foretrukken bruger</para>
        /// </summary>
        [AttributeLogicalName("preferredsystemuserid")]
        [DisplayName("Foretrukken bruger")]
        public EntityReference PreferredSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("preferredsystemuserid");
            }
            set {
                SetAttributeValue("preferredsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg firmaets primære kontakt for at sikre hurtig adgang til kontaktoplysninger.</para>
        /// <para>Display Name: Primær kontaktperson</para>
        /// </summary>
        [AttributeLogicalName("primarycontactid")]
        [DisplayName("Primær kontaktperson")]
        public EntityReference PrimaryContactId {
            get {
                return GetAttributeValue<EntityReference>("primarycontactid");
            }
            set {
                SetAttributeValue("primarycontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv firma- eller forretningsnavnet.</para>
        /// <para>Display Name: Firmanavn</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Firmanavn")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Primært Satori-id for firma</para>
        /// <para>Display Name: Primært Satori-id</para>
        /// </summary>
        [AttributeLogicalName("primarysatoriid")]
        [DisplayName("Primært Satori-id")]
        [MaxLength(200)]
        public string PrimarySatoriId {
            get {
                return GetAttributeValue<string>("primarysatoriid");
            }
            set {
                SetAttributeValue("primarysatoriid", value);
            }
        }
        
        /// <summary>
        /// <para>Primært Twitter-id for firma</para>
        /// <para>Display Name: Primært Twitter-id</para>
        /// </summary>
        [AttributeLogicalName("primarytwitterid")]
        [DisplayName("Primært Twitter-id")]
        [MaxLength(128)]
        public string PrimaryTwitterId {
            get {
                return GetAttributeValue<string>("primarytwitterid");
            }
            set {
                SetAttributeValue("primarytwitterid", value);
            }
        }
        
        /// <summary>
        /// <para>Viser processens id.</para>
        /// <para>Display Name: Proces</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Proces")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv firmaets årsomsætning, der bruges som indikator i analyser af det økonomiske resultat.</para>
        /// <para>Display Name: Årsomsætning</para>
        /// </summary>
        [AttributeLogicalName("revenue")]
        [DisplayName("Årsomsætning")]
        public decimal? Revenue {
            get {
                return GetMoneyValue("revenue");
            }
            set {
                SetMoneyValue("revenue", value);
            }
        }
        
        /// <summary>
        /// <para>Viser årsomsætningen konverteret til systemets standardgrundvaluta. I beregningerne bruges den valutakurs, der er angivet i området Valutaer.</para>
        /// <para>Display Name: Årsomsætning (grund)</para>
        /// </summary>
        [AttributeLogicalName("revenue_base")]
        [DisplayName("Årsomsætning (grund)")]
        public decimal? Revenue_Base {
            get {
                return GetMoneyValue("revenue_base");
            }
        }
        
        /// <summary>
        /// <para>Angiv SIC-koden (Standard Industrial Classification), der angiver firmaets primære branche, til brug ved marketingsegmentering og demografiske analyser.</para>
        /// <para>Display Name: NACE-kode</para>
        /// </summary>
        [AttributeLogicalName("sic")]
        [DisplayName("NACE-kode")]
        [MaxLength(20)]
        public string SIC {
            get {
                return GetAttributeValue<string>("sic");
            }
            set {
                SetAttributeValue("sic", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den serviceaftale (SLA), du vil anvende på firmaposten.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Sidste SLA, der blev anvendt til denne sag. Dette felt er kun beregnet til intern brug.</para>
        /// <para>Display Name: Sidst anvendte SLA</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Sidst anvendte SLA")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Angiv antallet af aktier, der er tilgængelige for offentligheden, for firmaet. Dette tal bruges som indikator i analyser af det økonomiske resultat.</para>
        /// <para>Display Name: Udestående aktier</para>
        /// </summary>
        [AttributeLogicalName("sharesoutstanding")]
        [DisplayName("Udestående aktier")]
        [Range(0, 1000000000)]
        public int? SharesOutstanding {
            get {
                return GetAttributeValue<int?>("sharesoutstanding");
            }
            set {
                SetAttributeValue("sharesoutstanding", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg en forsendelsesmetode til leverancer, der sendes til firmaets adresse, for at angive den foretrukne transportør eller en anden leveringsindstilling.</para>
        /// <para>Display Name: Forsendelsesmåde</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        [DisplayName("Forsendelsesmåde")]
        public Account_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Viser fasens id.</para>
        /// <para>Display Name: (Udfaset) Navn på procesfase</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Udfaset) Navn på procesfase")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Viser, om firmaet er aktivt eller inaktivt. Inaktive firmaer er skrivebeskyttede og kan ikke redigeres, medmindre de genaktiveres.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public AccountState? StateCode {
            get {
                return GetOptionSetValue<AccountState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg firmaets status.</para>
        /// <para>Display Name: Statusårsag</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Statusårsag")]
        public Account_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Account_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den børs, firmaet er noteret på, for at spore selskabets aktier og økonomiske resultater.</para>
        /// <para>Display Name: Børs</para>
        /// </summary>
        [AttributeLogicalName("stockexchange")]
        [DisplayName("Børs")]
        [MaxLength(20)]
        public string StockExchange {
            get {
                return GetAttributeValue<string>("stockexchange");
            }
            set {
                SetAttributeValue("stockexchange", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv hovedtelefonnummeret for dette firma.</para>
        /// <para>Display Name: Primær telefon</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        [DisplayName("Primær telefon")]
        [MaxLength(50)]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et andet telefonnummer for dette firma.</para>
        /// <para>Display Name: Anden telefon</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        [DisplayName("Anden telefon")]
        [MaxLength(50)]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et tredje telefonnummer for dette firma.</para>
        /// <para>Display Name: Telefon 3</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        [DisplayName("Telefon 3")]
        [MaxLength(50)]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg et område eller distrikt for firmaet til brug ved segmentering og analyser.</para>
        /// <para>Display Name: Distriktskode</para>
        /// </summary>
        [AttributeLogicalName("territorycode")]
        [DisplayName("Distriktskode")]
        public Account_TerritoryCode? TerritoryCode {
            get {
                return GetOptionSetValue<Account_TerritoryCode>("territorycode");
            }
            set {
                SetOptionSetValue("territorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv firmaets aktiesymbol for at spore selskabets økonomiske resultater. Du kan klikke på den kode, der er angivet i dette felt, for at få adgang til de seneste handelsoplysninger fra MSN Money.</para>
        /// <para>Display Name: Aktiesymbol</para>
        /// </summary>
        [AttributeLogicalName("tickersymbol")]
        [DisplayName("Aktiesymbol")]
        [MaxLength(10)]
        public string TickerSymbol {
            get {
                return GetAttributeValue<string>("tickersymbol");
            }
            set {
                SetAttributeValue("tickersymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Samlet tid jeg har brugt på mails (læsning og skrivning) samt møder i relation til firmapost.</para>
        /// <para>Display Name: Tidsforbrug for mig</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        [DisplayName("Tidsforbrug for mig")]
        [MaxLength(1250)]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>Kun til intern brug.</para>
        /// <para>Display Name: Versionsnummeret for tidszonereglen</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Versionsnummeret for tidszonereglen")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den lokale valuta til posten for at sikre, at budgetter rapporteres i den korrekte valuta.</para>
        /// <para>Display Name: Valuta</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Valuta")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Kun til intern brug.</para>
        /// <para>Display Name: (Udfaset) Gennemløbet sti</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Udfaset) Gennemløbet sti")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Den tidszonekode, der var i brug ved oprettelse af posten.</para>
        /// <para>Display Name: Tidszonekode til UTC-konvertering</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("Tidszonekode til UTC-konvertering")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Versionsnummeret for firmaet.</para>
        /// <para>Display Name: Versionsnummer</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Versionsnummer")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Angiv URL-adressen til firmaets websted for at få hurtige oplysninger om firmaprofilen.</para>
        /// <para>Display Name: Websted</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Websted")]
        [MaxLength(200)]
        public string WebSiteURL {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den fonestiske stavemåde for firmanavnet, hvis det er angivet på japansk, for at sikre, at navnet udtales korrekt i telefonopkald og anden kommunikation.</para>
        /// <para>Display Name: Yomi Firmanavn</para>
        /// </summary>
        [AttributeLogicalName("yominame")]
        [DisplayName("Yomi Firmanavn")]
        [MaxLength(160)]
        public string YomiName {
            get {
                return GetAttributeValue<string>("yominame");
            }
            set {
                SetAttributeValue("yominame", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Account associated with Account.</para>
        /// <para>Display Name: Managing Partner</para>
        /// </summary>
        [AttributeLogicalName("msa_managingpartnerid")]
        [DisplayName("Managing Partner")]
        public EntityReference msa_managingpartnerid {
            get {
                return GetAttributeValue<EntityReference>("msa_managingpartnerid");
            }
            set {
                SetAttributeValue("msa_managingpartnerid", value);
            }
        }
        
        [RelationshipSchemaName("account_master_account", EntityRole.Referenced)]
        public IEnumerable<Account> Referencedaccount_master_account {
            get {
                return GetRelatedEntities<Account>("account_master_account", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("account_master_account", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("account_parent_account", EntityRole.Referenced)]
        public IEnumerable<Account> Referencedaccount_parent_account {
            get {
                return GetRelatedEntities<Account>("account_parent_account", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("account_parent_account", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("msa_account_managingpartner", EntityRole.Referenced)]
        public IEnumerable<Account> Referencedmsa_account_managingpartner {
            get {
                return GetRelatedEntities<Account>("msa_account_managingpartner", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("msa_account_managingpartner", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("account_master_account", EntityRole.Referencing)]
        public Account Referencingaccount_master_account {
            get {
                return GetRelatedEntity<Account>("account_master_account", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("account_master_account", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentaccountid")]
        [RelationshipSchemaName("account_parent_account", EntityRole.Referencing)]
        public Account Referencingaccount_parent_account {
            get {
                return GetRelatedEntity<Account>("account_parent_account", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("account_parent_account", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("msa_managingpartnerid")]
        [RelationshipSchemaName("msa_account_managingpartner", EntityRole.Referencing)]
        public Account Referencingmsa_account_managingpartner {
            get {
                return GetRelatedEntity<Account>("msa_account_managingpartner", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("msa_account_managingpartner", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("primarycontactid")]
        [RelationshipSchemaName("account_primary_contact")]
        public Contact account_primary_contact {
            get {
                return GetRelatedEntity<Contact>("account_primary_contact", null);
            }
            set {
                SetRelatedEntity("account_primary_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_customer_accounts")]
        public IEnumerable<Contact> contact_customer_accounts {
            get {
                return GetRelatedEntities<Contact>("contact_customer_accounts", null);
            }
            set {
                SetRelatedEntities("contact_customer_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("msa_contact_managingpartner")]
        public IEnumerable<Contact> msa_contact_managingpartner {
            get {
                return GetRelatedEntities<Contact>("msa_contact_managingpartner", null);
            }
            set {
                SetRelatedEntities("msa_contact_managingpartner", null, value);
            }
        }
        
        public static Account Retrieve(IOrganizationService service, Guid id, params Expression<Func<Account, object>>[] attrs)
        {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>#Basistabeller En person vil oftest være et medlem af en forening, men kan også være andre interessenter.</para>
    /// <para>Display Name: Person</para>
    /// </summary>
    [EntityLogicalName("contact")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Contact : ExtendedEntity<ContactState, Contact_StatusCode>, ICustomer {
        
        public const string EntityLogicalName = "contact";
        
        public const int EntityTypeCode = 2;
        
        public Contact() : 
                base(EntityLogicalName) {
        }
        
        public Contact(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("fullname");
            }
        }
        
        [AttributeLogicalName("contactid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("contactid", value);
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for kontaktpersonen.</para>
        /// <para>Display Name: Kontaktperson</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Kontaktperson")]
        public Guid? ContactId {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
            set {
                SetId("contactid", value);
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for det firma, som kontaktpersonen er tilknyttet.</para>
        /// <para>Display Name: Firma</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Firma")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Vælg kontaktens rolle i firmaet eller salgsprocessen, f.eks. beslutningstager, medarbejder eller person, der øver indflydelse.</para>
        /// <para>Display Name: Rolle</para>
        /// </summary>
        [AttributeLogicalName("accountrolecode")]
        [DisplayName("Rolle")]
        public Contact_AccountRoleCode? AccountRoleCode {
            get {
                return GetOptionSetValue<Contact_AccountRoleCode>("accountrolecode");
            }
            set {
                SetOptionSetValue("accountrolecode", value);
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for adresse 1.</para>
        /// <para>Display Name: Adresse 1: Id</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Adresse 1: Id")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den primære adressetype.</para>
        /// <para>Display Name: Adresse 1: Adressetype</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Adresse 1: Adressetype")]
        public Contact_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv byen for den primære adresse.</para>
        /// <para>Display Name: Adresse 1: By</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("Adresse 1: By")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Viser den fulde primære adresse.</para>
        /// <para>Display Name: Adresse 1</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Adresse 1")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Angiv landet eller området for den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Land/område</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Adresse 1: Land/område")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv regionen for den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Region</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Adresse 1: Region")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv det faxnummer, der er tilknyttet den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Adresse 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg fragtbetingelser for den primære adresse for at sikre, at forsendelsesordrer behandles korrekt.</para>
        /// <para>Display Name: Adresse 1: Fragtbetingelser</para>
        /// </summary>
        [AttributeLogicalName("address1_freighttermscode")]
        [DisplayName("Adresse 1: Fragtbetingelser")]
        public Contact_Address1_FreightTermsCode? Address1_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address1_FreightTermsCode>("address1_freighttermscode");
            }
            set {
                SetOptionSetValue("address1_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv værdien for breddegraden for den primære adresse til brug ved kortlægning og andre programmer.</para>
        /// <para>Display Name: Adresse 1: Breddegrad</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Adresse 1: Breddegrad")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den første linje i den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Gade 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Adresse 1: Gade 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den anden linje i den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Gade 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Adresse 1: Gade 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den tredje linje i den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Gade 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Adresse 1: Gade 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv værdien for længdegraden for den primære adresse til brug ved kortlægning og andre programmer.</para>
        /// <para>Display Name: Adresse 1: Længdegrad</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Adresse 1: Længdegrad")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et beskrivende navn til den primære adresse, f.eks. koncernhovedsæde.</para>
        /// <para>Display Name: Adresse 1: Navn</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Adresse 1: Navn")]
        [MaxLength(200)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv postboksnummeret for den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Postboksnummer</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Adresse 1: Postboksnummer")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv postnummeret for den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Postnummer</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("Adresse 1: Postnummer")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv navnet på hovedkontakten på firmaets primære adresse.</para>
        /// <para>Display Name: Adresse 1: Navn på primær kontaktperson</para>
        /// </summary>
        [AttributeLogicalName("address1_primarycontactname")]
        [DisplayName("Adresse 1: Navn på primær kontaktperson")]
        [MaxLength(100)]
        public string Address1_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address1_primarycontactname");
            }
            set {
                SetAttributeValue("address1_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg en forsendelsesmetode til leverancer, der sendes til denne adresse.</para>
        /// <para>Display Name: Adresse 1: Forsendelsesmåde</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Adresse 1: Forsendelsesmåde")]
        public Contact_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv staten eller området for den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Område</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("Adresse 1: Område")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv det hovedtelefonnummer, der er tilknyttet den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Telefon</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Adresse 1: Telefon")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et andet telefonnummer, der er tilknyttet den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Telefon 2</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Adresse 1: Telefon 2")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et tredje telefonnummer, der er tilknyttet den primære adresse.</para>
        /// <para>Display Name: Adresse 1: Telefon 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Adresse 1: Telefon 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv UPS-zonen for den primære adresse for at sikre, at forsendelsesgebyrer beregnes korrekt, og at leverancer foretages prompte, hvis forsendelse sker med UPS.</para>
        /// <para>Display Name: Adresse 1: UPS-zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Adresse 1: UPS-zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg tidszonen, eller forskydningen fra GMT, for denne adresse, så andre kan referere til den, når de kontakter nogen på denne adresse.</para>
        /// <para>Display Name: Adresse 1: Forskydning fra GMT</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Adresse 1: Forskydning fra GMT")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for adresse 2.</para>
        /// <para>Display Name: Adresse 2: Id</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Adresse 2: Id")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den sekundære adressetype.</para>
        /// <para>Display Name: Adresse 2: Adressetype</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Adresse 2: Adressetype")]
        public Contact_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv byen for den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: By</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Adresse 2: By")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Viser den fulde sekundære adresse.</para>
        /// <para>Display Name: Adresse 2</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Adresse 2")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Angiv landet eller området for den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Land/område</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Adresse 2: Land/område")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv regionen for den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Region</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Adresse 2: Region")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv det faxnummer, der er tilknyttet den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Adresse 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg fragtbetingelser for den sekundære adresse for at sikre, at forsendelsesordrer behandles korrekt.</para>
        /// <para>Display Name: Adresse 2: Fragtbetingelser</para>
        /// </summary>
        [AttributeLogicalName("address2_freighttermscode")]
        [DisplayName("Adresse 2: Fragtbetingelser")]
        public Contact_Address2_FreightTermsCode? Address2_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address2_FreightTermsCode>("address2_freighttermscode");
            }
            set {
                SetOptionSetValue("address2_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv værdien for breddegraden for den sekundære adresse til brug ved kortlægning og andre programmer.</para>
        /// <para>Display Name: Adresse 2: Breddegrad</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Adresse 2: Breddegrad")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den første linje i den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Gade 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Adresse 2: Gade 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den anden linje i den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Gade 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Adresse 2: Gade 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den tredje linje i den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Gade 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Adresse 2: Gade 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv værdien for længdegraden for den sekundære adresse til brug ved kortlægning og andre programmer.</para>
        /// <para>Display Name: Adresse 2: Længdegrad</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Adresse 2: Længdegrad")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et beskrivende navn til den sekundære adresse, f.eks. koncernhovedsæde.</para>
        /// <para>Display Name: Adresse 2: Navn</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Adresse 2: Navn")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv postboksnummeret for den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Postboksnummer</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Adresse 2: Postboksnummer")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv postnummeret for den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Postnummer</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Adresse 2: Postnummer")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv navnet på hovedkontakten på firmaets sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Navn på primær kontaktperson</para>
        /// </summary>
        [AttributeLogicalName("address2_primarycontactname")]
        [DisplayName("Adresse 2: Navn på primær kontaktperson")]
        [MaxLength(100)]
        public string Address2_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address2_primarycontactname");
            }
            set {
                SetAttributeValue("address2_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg en forsendelsesmetode til leverancer, der sendes til denne adresse.</para>
        /// <para>Display Name: Adresse 2: Forsendelsesmåde</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Adresse 2: Forsendelsesmåde")]
        public Contact_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv staten eller området for den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Område</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Adresse 2: Område")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv det hovedtelefonnummer, der er tilknyttet den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Telefon 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Adresse 2: Telefon 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et andet telefonnummer, der er tilknyttet den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Telefon 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Adresse 2: Telefon 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et tredje telefonnummer, der er tilknyttet den sekundære adresse.</para>
        /// <para>Display Name: Adresse 2: Telefon 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Adresse 2: Telefon 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv UPS-zonen for den sekundære adresse for at sikre, at forsendelsesgebyrer beregnes korrekt, og at leverancer foretages prompte, hvis forsendelse sker med UPS.</para>
        /// <para>Display Name: Adresse 2: UPS-zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Adresse 2: UPS-zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg tidszonen, eller forskydningen fra GMT, for denne adresse, så andre kan referere til den, når de kontakter nogen på denne adresse.</para>
        /// <para>Display Name: Adresse 2: Forskydning fra GMT</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Adresse 2: Forskydning fra GMT")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for adresse 3.</para>
        /// <para>Display Name: Adresse 3: Id</para>
        /// </summary>
        [AttributeLogicalName("address3_addressid")]
        [DisplayName("Adresse 3: Id")]
        public Guid? Address3_AddressId {
            get {
                return GetAttributeValue<Guid?>("address3_addressid");
            }
            set {
                SetAttributeValue("address3_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den tredje adressetype.</para>
        /// <para>Display Name: Adresse 3: Adressetype</para>
        /// </summary>
        [AttributeLogicalName("address3_addresstypecode")]
        [DisplayName("Adresse 3: Adressetype")]
        public Contact_Address3_AddressTypeCode? Address3_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address3_AddressTypeCode>("address3_addresstypecode");
            }
            set {
                SetOptionSetValue("address3_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv byen i adresse 3.</para>
        /// <para>Display Name: Adresse 3: By</para>
        /// </summary>
        [AttributeLogicalName("address3_city")]
        [DisplayName("Adresse 3: By")]
        [MaxLength(80)]
        public string Address3_City {
            get {
                return GetAttributeValue<string>("address3_city");
            }
            set {
                SetAttributeValue("address3_city", value);
            }
        }
        
        /// <summary>
        /// <para>Viser den fulde tredje adresse.</para>
        /// <para>Display Name: Adresse 3</para>
        /// </summary>
        [AttributeLogicalName("address3_composite")]
        [DisplayName("Adresse 3")]
        public string Address3_Composite {
            get {
                return GetAttributeValue<string>("address3_composite");
            }
        }
        
        /// <summary>
        /// <para>landet/området for adresse 3.</para>
        /// <para>Display Name: Adresse 3: Land/område</para>
        /// </summary>
        [AttributeLogicalName("address3_country")]
        [DisplayName("Adresse 3: Land/område")]
        [MaxLength(80)]
        public string Address3_Country {
            get {
                return GetAttributeValue<string>("address3_country");
            }
            set {
                SetAttributeValue("address3_country", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv regionen for den tredje adresse.</para>
        /// <para>Display Name: Adresse 3: Region</para>
        /// </summary>
        [AttributeLogicalName("address3_county")]
        [DisplayName("Adresse 3: Region")]
        [MaxLength(50)]
        public string Address3_County {
            get {
                return GetAttributeValue<string>("address3_county");
            }
            set {
                SetAttributeValue("address3_county", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv det faxnummer, der er tilknyttet den tredje adresse.</para>
        /// <para>Display Name: Adresse 3: Fax</para>
        /// </summary>
        [AttributeLogicalName("address3_fax")]
        [DisplayName("Adresse 3: Fax")]
        [MaxLength(50)]
        public string Address3_Fax {
            get {
                return GetAttributeValue<string>("address3_fax");
            }
            set {
                SetAttributeValue("address3_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg fragtbetingelser for den tredje adresse for at sikre, at forsendelsesordrer behandles korrekt.</para>
        /// <para>Display Name: Adresse 3: Fragtbetingelser</para>
        /// </summary>
        [AttributeLogicalName("address3_freighttermscode")]
        [DisplayName("Adresse 3: Fragtbetingelser")]
        public Contact_Address3_FreightTermsCode? Address3_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address3_FreightTermsCode>("address3_freighttermscode");
            }
            set {
                SetOptionSetValue("address3_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv værdien for breddegraden for den tredje adresse til brug ved kortlægning og i andre programmer.</para>
        /// <para>Display Name: Adresse 3: Breddegrad</para>
        /// </summary>
        [AttributeLogicalName("address3_latitude")]
        [DisplayName("Adresse 3: Breddegrad")]
        public double? Address3_Latitude {
            get {
                return GetAttributeValue<double?>("address3_latitude");
            }
            set {
                SetAttributeValue("address3_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>den første linje i adresse 3.</para>
        /// <para>Display Name: Adresse 3: Gade 1</para>
        /// </summary>
        [AttributeLogicalName("address3_line1")]
        [DisplayName("Adresse 3: Gade 1")]
        [MaxLength(250)]
        public string Address3_Line1 {
            get {
                return GetAttributeValue<string>("address3_line1");
            }
            set {
                SetAttributeValue("address3_line1", value);
            }
        }
        
        /// <summary>
        /// <para>den anden linje i adresse 3.</para>
        /// <para>Display Name: Adresse 3: Gade 2</para>
        /// </summary>
        [AttributeLogicalName("address3_line2")]
        [DisplayName("Adresse 3: Gade 2")]
        [MaxLength(250)]
        public string Address3_Line2 {
            get {
                return GetAttributeValue<string>("address3_line2");
            }
            set {
                SetAttributeValue("address3_line2", value);
            }
        }
        
        /// <summary>
        /// <para>den tredje linje i adresse 3.</para>
        /// <para>Display Name: Adresse 3: Gade 3</para>
        /// </summary>
        [AttributeLogicalName("address3_line3")]
        [DisplayName("Adresse 3: Gade 3")]
        [MaxLength(250)]
        public string Address3_Line3 {
            get {
                return GetAttributeValue<string>("address3_line3");
            }
            set {
                SetAttributeValue("address3_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv værdien for længdegraden for den tredje adresse til brug ved kortlægning og i andre programmer.</para>
        /// <para>Display Name: Adresse 3: Længdegrad</para>
        /// </summary>
        [AttributeLogicalName("address3_longitude")]
        [DisplayName("Adresse 3: Længdegrad")]
        public double? Address3_Longitude {
            get {
                return GetAttributeValue<double?>("address3_longitude");
            }
            set {
                SetAttributeValue("address3_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et beskrivende navn til den tredje adresse, f.eks. koncernhovedsæde.</para>
        /// <para>Display Name: Adresse 3: Navn</para>
        /// </summary>
        [AttributeLogicalName("address3_name")]
        [DisplayName("Adresse 3: Navn")]
        [MaxLength(200)]
        public string Address3_Name {
            get {
                return GetAttributeValue<string>("address3_name");
            }
            set {
                SetAttributeValue("address3_name", value);
            }
        }
        
        /// <summary>
        /// <para>postboksnummeret i adresse 3.</para>
        /// <para>Display Name: Adresse 3: Postboksnummer</para>
        /// </summary>
        [AttributeLogicalName("address3_postofficebox")]
        [DisplayName("Adresse 3: Postboksnummer")]
        [MaxLength(20)]
        public string Address3_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address3_postofficebox");
            }
            set {
                SetAttributeValue("address3_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>postnummeret i adresse 3.</para>
        /// <para>Display Name: Adresse 3: Postnummer</para>
        /// </summary>
        [AttributeLogicalName("address3_postalcode")]
        [DisplayName("Adresse 3: Postnummer")]
        [MaxLength(20)]
        public string Address3_PostalCode {
            get {
                return GetAttributeValue<string>("address3_postalcode");
            }
            set {
                SetAttributeValue("address3_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv navnet på hovedkontakten på firmaets tredje adresse.</para>
        /// <para>Display Name: Adresse 3: Navn på primær kontaktperson</para>
        /// </summary>
        [AttributeLogicalName("address3_primarycontactname")]
        [DisplayName("Adresse 3: Navn på primær kontaktperson")]
        [MaxLength(100)]
        public string Address3_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address3_primarycontactname");
            }
            set {
                SetAttributeValue("address3_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg en forsendelsesmetode til leverancer, der sendes til denne adresse.</para>
        /// <para>Display Name: Adresse 3: Forsendelsesmåde</para>
        /// </summary>
        [AttributeLogicalName("address3_shippingmethodcode")]
        [DisplayName("Adresse 3: Forsendelsesmåde")]
        public Contact_Address3_ShippingMethodCode? Address3_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address3_ShippingMethodCode>("address3_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address3_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>området i adresse 3.</para>
        /// <para>Display Name: Adresse 3: Område</para>
        /// </summary>
        [AttributeLogicalName("address3_stateorprovince")]
        [DisplayName("Adresse 3: Område")]
        [MaxLength(50)]
        public string Address3_StateOrProvince {
            get {
                return GetAttributeValue<string>("address3_stateorprovince");
            }
            set {
                SetAttributeValue("address3_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv det hovedtelefonnummer, der er tilknyttet den tredje adresse.</para>
        /// <para>Display Name: Adresse 3: Telefon 1</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone1")]
        [DisplayName("Adresse 3: Telefon 1")]
        [MaxLength(50)]
        public string Address3_Telephone1 {
            get {
                return GetAttributeValue<string>("address3_telephone1");
            }
            set {
                SetAttributeValue("address3_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et andet telefonnummer, der er tilknyttet den tredje adresse.</para>
        /// <para>Display Name: Adresse 3: Telefon 2</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone2")]
        [DisplayName("Adresse 3: Telefon 2")]
        [MaxLength(50)]
        public string Address3_Telephone2 {
            get {
                return GetAttributeValue<string>("address3_telephone2");
            }
            set {
                SetAttributeValue("address3_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et tredje telefonnummer, der er tilknyttet den primære adresse.</para>
        /// <para>Display Name: Adresse 3: Telefon 3</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone3")]
        [DisplayName("Adresse 3: Telefon 3")]
        [MaxLength(50)]
        public string Address3_Telephone3 {
            get {
                return GetAttributeValue<string>("address3_telephone3");
            }
            set {
                SetAttributeValue("address3_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv UPS-zonen for den tredje adresse for at sikre, at forsendelsesgebyrer beregnes korrekt, og at leverancer foretages prompte, hvis forsendelse sker med UPS.</para>
        /// <para>Display Name: Adresse 3: UPS-zone</para>
        /// </summary>
        [AttributeLogicalName("address3_upszone")]
        [DisplayName("Adresse 3: UPS-zone")]
        [MaxLength(4)]
        public string Address3_UPSZone {
            get {
                return GetAttributeValue<string>("address3_upszone");
            }
            set {
                SetAttributeValue("address3_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg tidszonen, eller forskydningen fra GMT, for denne adresse, så andre kan referere til den, når de kontakter nogen på denne adresse.</para>
        /// <para>Display Name: Adresse 3: Forskydning fra GMT</para>
        /// </summary>
        [AttributeLogicalName("address3_utcoffset")]
        [DisplayName("Adresse 3: Forskydning fra GMT")]
        [Range(-1500, 1500)]
        public int? Address3_UTCOffset {
            get {
                return GetAttributeValue<int?>("address3_utcoffset");
            }
            set {
                SetAttributeValue("address3_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Oprettet af IP-adresse</para>
        /// </summary>
        [AttributeLogicalName("adx_createdbyipaddress")]
        [DisplayName("Oprettet af IP-adresse")]
        [MaxLength(100)]
        public string Adx_CreatedByIPAddress {
            get {
                return GetAttributeValue<string>("adx_createdbyipaddress");
            }
            set {
                SetAttributeValue("adx_createdbyipaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Oprettet af Brugernavn</para>
        /// </summary>
        [AttributeLogicalName("adx_createdbyusername")]
        [DisplayName("Oprettet af Brugernavn")]
        [MaxLength(100)]
        public string Adx_CreatedByUsername {
            get {
                return GetAttributeValue<string>("adx_createdbyusername");
            }
            set {
                SetAttributeValue("adx_createdbyusername", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Ændret af IP-adresse</para>
        /// </summary>
        [AttributeLogicalName("adx_modifiedbyipaddress")]
        [DisplayName("Ændret af IP-adresse")]
        [MaxLength(100)]
        public string Adx_ModifiedByIPAddress {
            get {
                return GetAttributeValue<string>("adx_modifiedbyipaddress");
            }
            set {
                SetAttributeValue("adx_modifiedbyipaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Ændret af Brugernavn</para>
        /// </summary>
        [AttributeLogicalName("adx_modifiedbyusername")]
        [DisplayName("Ændret af Brugernavn")]
        [MaxLength(100)]
        public string Adx_ModifiedByUsername {
            get {
                return GetAttributeValue<string>("adx_modifiedbyusername");
            }
            set {
                SetAttributeValue("adx_modifiedbyusername", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Organization Name</para>
        /// </summary>
        [AttributeLogicalName("adx_organizationname")]
        [DisplayName("Organization Name")]
        [MaxLength(250)]
        public string Adx_OrganizationName {
            get {
                return GetAttributeValue<string>("adx_organizationname");
            }
            set {
                SetAttributeValue("adx_organizationname", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Profil er anonym</para>
        /// </summary>
        [AttributeLogicalName("adx_profileisanonymous")]
        [DisplayName("Profil er anonym")]
        public bool? Adx_ProfileIsAnonymous {
            get {
                return GetAttributeValue<bool?>("adx_profileisanonymous");
            }
            set {
                SetAttributeValue("adx_profileisanonymous", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Seneste profilaktivitet</para>
        /// </summary>
        [AttributeLogicalName("adx_profilelastactivity")]
        [DisplayName("Seneste profilaktivitet")]
        public DateTime? Adx_ProfileLastActivity {
            get {
                return GetAttributeValue<DateTime?>("adx_profilelastactivity");
            }
            set {
                SetAttributeValue("adx_profilelastactivity", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Time Zone</para>
        /// </summary>
        [AttributeLogicalName("adx_timezone")]
        [DisplayName("Time Zone")]
        [Range(-1500, 1500)]
        public int? Adx_TimeZone {
            get {
                return GetAttributeValue<int?>("adx_timezone");
            }
            set {
                SetAttributeValue("adx_timezone", value);
            }
        }
        
        /// <summary>
        /// <para>Kun til systembrug.</para>
        /// <para>Display Name: Aldersfordeling 30</para>
        /// </summary>
        [AttributeLogicalName("aging30")]
        [DisplayName("Aldersfordeling 30")]
        public decimal? Aging30 {
            get {
                return GetMoneyValue("aging30");
            }
        }
        
        /// <summary>
        /// <para>Viser feltet Aldersfordeling 30 konverteret til systemets standardgrundvaluta. I beregningerne bruges den valutakurs, der er angivet i området Valutaer.</para>
        /// <para>Display Name: Aldersfordeling 30 (grund)</para>
        /// </summary>
        [AttributeLogicalName("aging30_base")]
        [DisplayName("Aldersfordeling 30 (grund)")]
        public decimal? Aging30_Base {
            get {
                return GetMoneyValue("aging30_base");
            }
        }
        
        /// <summary>
        /// <para>Kun til systembrug.</para>
        /// <para>Display Name: Aldersfordeling 60</para>
        /// </summary>
        [AttributeLogicalName("aging60")]
        [DisplayName("Aldersfordeling 60")]
        public decimal? Aging60 {
            get {
                return GetMoneyValue("aging60");
            }
        }
        
        /// <summary>
        /// <para>Viser feltet Aldersfordeling 60 konverteret til systemets standardgrundvaluta. I beregningerne bruges den valutakurs, der er angivet i området Valutaer.</para>
        /// <para>Display Name: Aldersfordeling 60 (grund)</para>
        /// </summary>
        [AttributeLogicalName("aging60_base")]
        [DisplayName("Aldersfordeling 60 (grund)")]
        public decimal? Aging60_Base {
            get {
                return GetMoneyValue("aging60_base");
            }
        }
        
        /// <summary>
        /// <para>Kun til systembrug.</para>
        /// <para>Display Name: Aldersfordeling 90</para>
        /// </summary>
        [AttributeLogicalName("aging90")]
        [DisplayName("Aldersfordeling 90")]
        public decimal? Aging90 {
            get {
                return GetMoneyValue("aging90");
            }
        }
        
        /// <summary>
        /// <para>Viser feltet Aldersfordeling 90 konverteret til systemets standardgrundvaluta. I beregningerne bruges den valutakurs, der er angivet i området Valutaer.</para>
        /// <para>Display Name: Aldersfordeling 90 (grund)</para>
        /// </summary>
        [AttributeLogicalName("aging90_base")]
        [DisplayName("Aldersfordeling 90 (grund)")]
        public decimal? Aging90_Base {
            get {
                return GetMoneyValue("aging90_base");
            }
        }
        
        /// <summary>
        /// <para>Angiv datoen for kontaktens bryllupsdag eller årsdagen for servicen til brug i gaveprogrammer til kunder eller anden kommunikation.</para>
        /// <para>Display Name: Mærkedag</para>
        /// </summary>
        [AttributeLogicalName("anniversary")]
        [DisplayName("Mærkedag")]
        public DateTime? Anniversary {
            get {
                return GetAttributeValue<DateTime?>("anniversary");
            }
            set {
                SetAttributeValue("anniversary", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens årlige indkomst til brug i profileringer og økonomiske analyser.</para>
        /// <para>Display Name: Årlig indkomst</para>
        /// </summary>
        [AttributeLogicalName("annualincome")]
        [DisplayName("Årlig indkomst")]
        public decimal? AnnualIncome {
            get {
                return GetMoneyValue("annualincome");
            }
            set {
                SetMoneyValue("annualincome", value);
            }
        }
        
        /// <summary>
        /// <para>Viser feltet Årlig indkomst konverteret til systemets standardgrundvaluta. I beregningerne bruges den valutakurs, der er angivet i området Valutaer.</para>
        /// <para>Display Name: Årlig indkomst (grund)</para>
        /// </summary>
        [AttributeLogicalName("annualincome_base")]
        [DisplayName("Årlig indkomst (grund)")]
        public decimal? AnnualIncome_Base {
            get {
                return GetMoneyValue("annualincome_base");
            }
        }
        
        /// <summary>
        /// <para>Angiv navnet på kontaktpersonens assistent.</para>
        /// <para>Display Name: Assistent</para>
        /// </summary>
        [AttributeLogicalName("assistantname")]
        [DisplayName("Assistent")]
        [MaxLength(100)]
        public string AssistantName {
            get {
                return GetAttributeValue<string>("assistantname");
            }
            set {
                SetAttributeValue("assistantname", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv telefonnummeret til kontaktpersonens assistent.</para>
        /// <para>Display Name: Assistents telefon</para>
        /// </summary>
        [AttributeLogicalName("assistantphone")]
        [DisplayName("Assistents telefon")]
        [MaxLength(50)]
        public string AssistantPhone {
            get {
                return GetAttributeValue<string>("assistantphone");
            }
            set {
                SetAttributeValue("assistantphone", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens fødselsdag til brug i gaveprogrammer til kunder eller anden kommunikation.</para>
        /// <para>Display Name: Fødselsdag</para>
        /// </summary>
        [AttributeLogicalName("birthdate")]
        [DisplayName("Fødselsdag")]
        public DateTime? BirthDate {
            get {
                return GetAttributeValue<DateTime?>("birthdate");
            }
            set {
                SetAttributeValue("birthdate", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et andet arbejdstelefonnummer til denne kontakt.</para>
        /// <para>Display Name: Telefon 2 (arbejde)</para>
        /// </summary>
        [AttributeLogicalName("business2")]
        [DisplayName("Telefon 2 (arbejde)")]
        [MaxLength(50)]
        public string Business2 {
            get {
                return GetAttributeValue<string>("business2");
            }
            set {
                SetAttributeValue("business2", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et tilbagekaldstelefonnummer til denne kontakt.</para>
        /// <para>Display Name: Tilbagekaldsnummer</para>
        /// </summary>
        [AttributeLogicalName("callback")]
        [DisplayName("Tilbagekaldsnummer")]
        [MaxLength(50)]
        public string Callback {
            get {
                return GetAttributeValue<string>("callback");
            }
            set {
                SetAttributeValue("callback", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv navnene på kontaktens børn som reference i kommunikation og klientprogrammer.</para>
        /// <para>Display Name: Navn på børn</para>
        /// </summary>
        [AttributeLogicalName("childrensnames")]
        [DisplayName("Navn på børn")]
        [MaxLength(255)]
        public string ChildrensNames {
            get {
                return GetAttributeValue<string>("childrensnames");
            }
            set {
                SetAttributeValue("childrensnames", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens firmatelefon.</para>
        /// <para>Display Name: Firmatelefon</para>
        /// </summary>
        [AttributeLogicalName("company")]
        [DisplayName("Firmatelefon")]
        [MaxLength(50)]
        public string Company {
            get {
                return GetAttributeValue<string>("company");
            }
            set {
                SetAttributeValue("company", value);
            }
        }
        
        /// <summary>
        /// <para>Viser, hvem der har oprettet posten.</para>
        /// <para>Display Name: Oprettet af</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Oprettet af")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Viser den eksterne part, der oprettede posten.</para>
        /// <para>Display Name: Oprettet af (ekstern part)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Oprettet af (ekstern part)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Viser dato og klokkeslæt for oprettelse af posten. Datoen og klokkeslættet vises i den tidszone, der er valgt i indstillingerne i Microsoft Dynamics 365.</para>
        /// <para>Display Name: Oprettet</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Oprettet")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Viser, hvem der oprettede posten på vegne af en anden bruger.</para>
        /// <para>Display Name: Oprettet af (stedfortræder)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Oprettet af (stedfortræder)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens kreditgrænse som reference, når du håndterer faktura- og regnskabsproblemer over for kunden.</para>
        /// <para>Display Name: Kreditgrænse</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        [DisplayName("Kreditgrænse")]
        public decimal? CreditLimit {
            get {
                return GetMoneyValue("creditlimit");
            }
            set {
                SetMoneyValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Viser feltet Kreditgrænse konverteret til systemets standardgrundvaluta til brug for rapportering. I beregningerne bruges den valutakurs, der er angivet i området Valutaer.</para>
        /// <para>Display Name: Kreditgrænse (grund)</para>
        /// </summary>
        [AttributeLogicalName("creditlimit_base")]
        [DisplayName("Kreditgrænse (grund)")]
        public decimal? CreditLimit_Base {
            get {
                return GetMoneyValue("creditlimit_base");
            }
        }
        
        /// <summary>
        /// <para>Vælg, om kontakten er genstand for kreditstop, som reference ved håndtering af faktura- og regnskabsproblemer.</para>
        /// <para>Display Name: Kreditstop</para>
        /// </summary>
        [AttributeLogicalName("creditonhold")]
        [DisplayName("Kreditstop")]
        public bool? CreditOnHold {
            get {
                return GetAttributeValue<bool?>("creditonhold");
            }
            set {
                SetAttributeValue("creditonhold", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg størrelsen på kontaktens firma til brug for segmentering og rapportering.</para>
        /// <para>Display Name: Kundestørrelse</para>
        /// </summary>
        [AttributeLogicalName("customersizecode")]
        [DisplayName("Kundestørrelse")]
        public Contact_CustomerSizeCode? CustomerSizeCode {
            get {
                return GetOptionSetValue<Contact_CustomerSizeCode>("customersizecode");
            }
            set {
                SetOptionSetValue("customersizecode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den kategori, der bedst beskriver relationen mellem kontakten og din organisation.</para>
        /// <para>Display Name: Relationstype</para>
        /// </summary>
        [AttributeLogicalName("customertypecode")]
        [DisplayName("Relationstype")]
        public Contact_CustomerTypeCode? CustomerTypeCode {
            get {
                return GetOptionSetValue<Contact_CustomerTypeCode>("customertypecode");
            }
            set {
                SetOptionSetValue("customertypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den division eller afdeling, hvor kontakten arbejder, i moderselskabet eller den overordnede afdeling.</para>
        /// <para>Display Name: Afdeling</para>
        /// </summary>
        [AttributeLogicalName("department")]
        [DisplayName("Afdeling")]
        [MaxLength(100)]
        public string Department {
            get {
                return GetAttributeValue<string>("department");
            }
            set {
                SetAttributeValue("department", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv flere oplysninger for at beskrive kontakten, f.eks. et uddrag fra firmaets websted.</para>
        /// <para>Display Name: Beskrivelse</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Beskrivelse")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om kontakten accepterer masseforsendelser af e-mails, der sendes via marketingkampagner eller lynkampagner. Hvis Tillad ikke er valgt, kan kontakten tilføjes på marketinglisten, men er udelukket fra e-mailen.</para>
        /// <para>Display Name: Tillad ikke e-mail-masseforsend.</para>
        /// </summary>
        [AttributeLogicalName("donotbulkemail")]
        [DisplayName("Tillad ikke e-mail-masseforsend.")]
        public bool? DoNotBulkEMail {
            get {
                return GetAttributeValue<bool?>("donotbulkemail");
            }
            set {
                SetAttributeValue("donotbulkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om kontakten accepterer masseforsendelser af almindelig post, der sendes via marketingkampagner eller lynkampagner. Hvis Tillad ikke er valgt, kan kontakten tilføjes på marketinglisten, men er udelukket fra brevene.</para>
        /// <para>Display Name: Tillad ikke masseforsendelse</para>
        /// </summary>
        [AttributeLogicalName("donotbulkpostalmail")]
        [DisplayName("Tillad ikke masseforsendelse")]
        public bool? DoNotBulkPostalMail {
            get {
                return GetAttributeValue<bool?>("donotbulkpostalmail");
            }
            set {
                SetAttributeValue("donotbulkpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om kontakten tillader, at der sendes direct mail fra Microsoft Dynamics 365. Hvis Tillad ikke er valgt, sender Microsoft Dynamics 365 ikke mailen.</para>
        /// <para>Display Name: Tillad ikke e-mails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        [DisplayName("Tillad ikke e-mails")]
        public bool? DoNotEMail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
            set {
                SetAttributeValue("donotemail", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om kontakten tillader faxer. Hvis Tillad ikke er valgt, udelukkes kontakten fra alle faxaktiviteter, der distribueres i marketingkampagner.</para>
        /// <para>Display Name: Tillad ikke faxer</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        [DisplayName("Tillad ikke faxer")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
            set {
                SetAttributeValue("donotfax", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om kontakten accepterer telefonopkald. Hvis Tillad ikke er valgt, udelukkes kontakten fra alle telefonopkaldsaktiviteter, der distribueres i marketingkampagner.</para>
        /// <para>Display Name: Tillad ikke telefonopkald</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        [DisplayName("Tillad ikke telefonopkald")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
            set {
                SetAttributeValue("donotphone", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om kontakten tillader direct mail. Hvis Tillad ikke er valgt, udelukkes kontakten fra brevaktiviteter, der distribueres i marketingkampagner.</para>
        /// <para>Display Name: Tillad ikke post</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        [DisplayName("Tillad ikke post")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
            set {
                SetAttributeValue("donotpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om kontakten accepterer marketingmateriale som f.eks. brochurer eller kataloger. Kontakter, der har frameldt dette, kan udelukkes fra marketinginitiativer.</para>
        /// <para>Display Name: Marketingmatr.</para>
        /// </summary>
        [AttributeLogicalName("donotsendmm")]
        [DisplayName("Marketingmatr.")]
        public bool? DoNotSendMM {
            get {
                return GetAttributeValue<bool?>("donotsendmm");
            }
            set {
                SetAttributeValue("donotsendmm", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens primære e-mail-adresse.</para>
        /// <para>Display Name: Mail</para>
        /// </summary>
        [AttributeLogicalName("emailaddress1")]
        [DisplayName("Mail")]
        [MaxLength(100)]
        public string EMailAddress1 {
            get {
                return GetAttributeValue<string>("emailaddress1");
            }
            set {
                SetAttributeValue("emailaddress1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens sekundære e-mail-adresse.</para>
        /// <para>Display Name: Mailadresse 2</para>
        /// </summary>
        [AttributeLogicalName("emailaddress2")]
        [DisplayName("Mailadresse 2")]
        [MaxLength(100)]
        public string EMailAddress2 {
            get {
                return GetAttributeValue<string>("emailaddress2");
            }
            set {
                SetAttributeValue("emailaddress2", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens alternative e-mail-adresse.</para>
        /// <para>Display Name: Mailadresse 3</para>
        /// </summary>
        [AttributeLogicalName("emailaddress3")]
        [DisplayName("Mailadresse 3")]
        [MaxLength(100)]
        public string EMailAddress3 {
            get {
                return GetAttributeValue<string>("emailaddress3");
            }
            set {
                SetAttributeValue("emailaddress3", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg kontaktens højeste uddannelsesniveau til brug ved segmentering og analyser.</para>
        /// <para>Display Name: Uddannelse</para>
        /// </summary>
        [AttributeLogicalName("educationcode")]
        [DisplayName("Uddannelse")]
        public Contact_EducationCode? EducationCode {
            get {
                return GetOptionSetValue<Contact_EducationCode>("educationcode");
            }
            set {
                SetOptionSetValue("educationcode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens medarbejder-id eller -nummer som reference i ordrer, servicesager eller anden kommunikation med kontaktens organisation.</para>
        /// <para>Display Name: Medarbejder</para>
        /// </summary>
        [AttributeLogicalName("employeeid")]
        [DisplayName("Medarbejder")]
        [MaxLength(50)]
        public string EmployeeId {
            get {
                return GetAttributeValue<string>("employeeid");
            }
            set {
                SetAttributeValue("employeeid", value);
            }
        }
        
        /// <summary>
        /// <para>Kun til intern brug.</para>
        /// <para>Display Name: Id for objektbillede</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Id for objektbillede")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Viser omregningskursen for postens valuta. Valutakursen bruges til at konvertere alle pengefelter i posten fra den lokale valuta til systemets standardvaluta.</para>
        /// <para>Display Name: Valutakurs</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Valutakurs")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Id for en ekstern bruger.</para>
        /// <para>Display Name: Id for ekstern bruger</para>
        /// </summary>
        [AttributeLogicalName("externaluseridentifier")]
        [DisplayName("Id for ekstern bruger")]
        [MaxLength(50)]
        public string ExternalUserIdentifier {
            get {
                return GetAttributeValue<string>("externaluseridentifier");
            }
            set {
                SetAttributeValue("externaluseridentifier", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg kontaktens civilstand som reference i opfølgende telefonopkald og anden kommunikation.</para>
        /// <para>Display Name: Civilstand</para>
        /// </summary>
        [AttributeLogicalName("familystatuscode")]
        [DisplayName("Civilstand")]
        public Contact_FamilyStatusCode? FamilyStatusCode {
            get {
                return GetOptionSetValue<Contact_FamilyStatusCode>("familystatuscode");
            }
            set {
                SetOptionSetValue("familystatuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens faxnummer.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        [DisplayName("Fax")]
        [MaxLength(50)]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens fornavn for at sikre, at kontakten tituleres korrekt i salgsopkald, e-mail og marketingkampagner.</para>
        /// <para>Display Name: Fornavn</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        [DisplayName("Fornavn")]
        [MaxLength(50)]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Oplysninger om, hvorvidt følgende mailaktivitet som åbninger, visning af vedhæftede filer og klik på links skal tillades for mails, der sendes til kontakten.</para>
        /// <para>Display Name: Følg mailaktivitet</para>
        /// </summary>
        [AttributeLogicalName("followemail")]
        [DisplayName("Følg mailaktivitet")]
        public bool? FollowEmail {
            get {
                return GetAttributeValue<bool?>("followemail");
            }
            set {
                SetAttributeValue("followemail", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv URL-adressen til kontaktens FTP-websted, for at brugerne kan få adgang til data og dele dokumenter.</para>
        /// <para>Display Name: FTP-sted</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        [DisplayName("FTP-sted")]
        [MaxLength(200)]
        public string FtpSiteUrl {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Kombinerer og viser kontaktens for- og efternavn, så det fulde navn kan vises i visninger og rapporter.</para>
        /// <para>Display Name: Fulde navn</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Fulde navn")]
        [MaxLength(160)]
        public string FullName {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Vælg kontaktens køn for at sikre, at kontakten tituleres korrekt i salgsopkald, e-mail og marketingkampagner.</para>
        /// <para>Display Name: Køn</para>
        /// </summary>
        [AttributeLogicalName("gendercode")]
        [DisplayName("Køn")]
        public Contact_GenderCode? GenderCode {
            get {
                return GetOptionSetValue<Contact_GenderCode>("gendercode");
            }
            set {
                SetOptionSetValue("gendercode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv pasnummeret eller cpr-nummeret på kontakten til brug i dokumenter eller rapporter.</para>
        /// <para>Display Name: Statslig</para>
        /// </summary>
        [AttributeLogicalName("governmentid")]
        [DisplayName("Statslig")]
        [MaxLength(50)]
        public string GovernmentId {
            get {
                return GetAttributeValue<string>("governmentid");
            }
            set {
                SetAttributeValue("governmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om kontaktens har børn, som reference i opfølgende telefonopkald og anden kommunikation.</para>
        /// <para>Display Name: Har børn</para>
        /// </summary>
        [AttributeLogicalName("haschildrencode")]
        [DisplayName("Har børn")]
        public Contact_HasChildrenCode? HasChildrenCode {
            get {
                return GetOptionSetValue<Contact_HasChildrenCode>("haschildrencode");
            }
            set {
                SetOptionSetValue("haschildrencode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et andet privat telefonnummer til denne kontakt.</para>
        /// <para>Display Name: Telefon 2 (privat)</para>
        /// </summary>
        [AttributeLogicalName("home2")]
        [DisplayName("Telefon 2 (privat)")]
        [MaxLength(50)]
        public string Home2 {
            get {
                return GetAttributeValue<string>("home2");
            }
            set {
                SetAttributeValue("home2", value);
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for den dataimport eller dataoverførsel, der oprettede denne post.</para>
        /// <para>Display Name: Importsekvensnummer</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Importsekvensnummer")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg, om kontakten findes i et separat regnskabssystem eller et andet system, f.eks. Microsoft Dynamics GP eller en anden ERP-database, til brug i integrationsprocesser.</para>
        /// <para>Display Name: Kunde i administrationssystem</para>
        /// </summary>
        [AttributeLogicalName("isbackofficecustomer")]
        [DisplayName("Kunde i administrationssystem")]
        public bool? IsBackofficeCustomer {
            get {
                return GetAttributeValue<bool?>("isbackofficecustomer");
            }
            set {
                SetAttributeValue("isbackofficecustomer", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens stilling for at sikre, at kontakten tituleres korrekt i salgsopkald, e-mail og marketingkampagner.</para>
        /// <para>Display Name: Stilling</para>
        /// </summary>
        [AttributeLogicalName("jobtitle")]
        [DisplayName("Stilling")]
        [MaxLength(100)]
        public string JobTitle {
            get {
                return GetAttributeValue<string>("jobtitle");
            }
            set {
                SetAttributeValue("jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens efternavn for at sikre, at kontakten tituleres korrekt i salgsopkald, e-mail og marketingkampagner.</para>
        /// <para>Display Name: Efternavn</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        [DisplayName("Efternavn")]
        [MaxLength(50)]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Indeholder dato- og klokkeslætsstemplet for den seneste tid for I venteposition.</para>
        /// <para>Display Name: Seneste tid i venteposition</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Seneste tid i venteposition")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Viser den dato, hvor kontakten sidst blev inkluderet i en marketingkampagne eller lynkampagne.</para>
        /// <para>Display Name: Seneste dato i kampagnen</para>
        /// </summary>
        [AttributeLogicalName("lastusedincampaign")]
        [DisplayName("Seneste dato i kampagnen")]
        public DateTime? LastUsedInCampaign {
            get {
                return GetAttributeValue<DateTime?>("lastusedincampaign");
            }
            set {
                SetAttributeValue("lastusedincampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den primære marketingkilde, der dirigerede kontakten til din organisation.</para>
        /// <para>Display Name: Kilde til kundeemne</para>
        /// </summary>
        [AttributeLogicalName("leadsourcecode")]
        [DisplayName("Kilde til kundeemne")]
        public Contact_LeadSourceCode? LeadSourceCode {
            get {
                return GetOptionSetValue<Contact_LeadSourceCode>("leadsourcecode");
            }
            set {
                SetOptionSetValue("leadsourcecode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv navnet på kontaktens overordnede til brug ved eskalering af problemer eller anden opfølgende kommunikation med kontakten.</para>
        /// <para>Display Name: Leder</para>
        /// </summary>
        [AttributeLogicalName("managername")]
        [DisplayName("Leder")]
        [MaxLength(100)]
        public string ManagerName {
            get {
                return GetAttributeValue<string>("managername");
            }
            set {
                SetAttributeValue("managername", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv telefonnummeret til kontaktpersonens overordnede.</para>
        /// <para>Display Name: Leders telefon</para>
        /// </summary>
        [AttributeLogicalName("managerphone")]
        [DisplayName("Leders telefon")]
        [MaxLength(50)]
        public string ManagerPhone {
            get {
                return GetAttributeValue<string>("managerphone");
            }
            set {
                SetAttributeValue("managerphone", value);
            }
        }
        
        /// <summary>
        /// <para>Angiver, om det kun er til marketingbrug</para>
        /// <para>Display Name: Kun marketing</para>
        /// </summary>
        [AttributeLogicalName("marketingonly")]
        [DisplayName("Kun marketing")]
        public bool? MarketingOnly {
            get {
                return GetAttributeValue<bool?>("marketingonly");
            }
            set {
                SetAttributeValue("marketingonly", value);
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for hovedkontaktpersonen til fletning.</para>
        /// <para>Display Name: Master-id</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        [DisplayName("Master-id")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
        }
        
        /// <summary>
        /// <para>Viser, om firmaet er blevet flettet med en hovedkontaktperson.</para>
        /// <para>Display Name: Flettet</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        [DisplayName("Flettet")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens mellemnavn eller initialer for at sikre, at kontakten tituleres korrekt.</para>
        /// <para>Display Name: Mellemnavn</para>
        /// </summary>
        [AttributeLogicalName("middlename")]
        [DisplayName("Mellemnavn")]
        [MaxLength(50)]
        public string MiddleName {
            get {
                return GetAttributeValue<string>("middlename");
            }
            set {
                SetAttributeValue("middlename", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktpersonens mobilnummer.</para>
        /// <para>Display Name: Mobiltelefon</para>
        /// </summary>
        [AttributeLogicalName("mobilephone")]
        [DisplayName("Mobiltelefon")]
        [MaxLength(50)]
        public string MobilePhone {
            get {
                return GetAttributeValue<string>("mobilephone");
            }
            set {
                SetAttributeValue("mobilephone", value);
            }
        }
        
        /// <summary>
        /// <para>Viser, hvem der sidst har opdateret posten.</para>
        /// <para>Display Name: Ændret af</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Ændret af")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Viser den eksterne part, der ændrede posten.</para>
        /// <para>Display Name: Ændret af (ekstern part)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Ændret af (ekstern part)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Viser dato og klokkeslæt for den seneste opdatering af posten. Datoen og klokkeslættet vises i den tidszone, der er valgt i indstillingerne i Microsoft Dynamics 365.</para>
        /// <para>Display Name: Ændret</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Ændret")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Viser, hvem der sidst har opdateret posten på vegne af en anden bruger.</para>
        /// <para>Display Name: Ændret af (stedfortræder)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Ændret af (stedfortræder)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktpersonens kælenavn.</para>
        /// <para>Display Name: Kaldenavn</para>
        /// </summary>
        [AttributeLogicalName("nickname")]
        [DisplayName("Kaldenavn")]
        [MaxLength(100)]
        public string NickName {
            get {
                return GetAttributeValue<string>("nickname");
            }
            set {
                SetAttributeValue("nickname", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv antal børn tilhørende kontakten, som reference i opfølgende telefonopkald og anden kommunikation.</para>
        /// <para>Display Name: Antal børn</para>
        /// </summary>
        [AttributeLogicalName("numberofchildren")]
        [DisplayName("Antal børn")]
        [Range(0, 1000000000)]
        public int? NumberOfChildren {
            get {
                return GetAttributeValue<int?>("numberofchildren");
            }
            set {
                SetAttributeValue("numberofchildren", value);
            }
        }
        
        /// <summary>
        /// <para>Viser, hvor længe posten var i venteposition i minutter.</para>
        /// <para>Display Name: Tid for I venteposition (minutter)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("Tid for I venteposition (minutter)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Dato og klokkeslæt for overførsel af posten.</para>
        /// <para>Display Name: Posten blev oprettet den</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Posten blev oprettet den")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den bruger eller det team, der er tildelt til at administrere posten. Dette felt opdateres, hver gang posten tildeles en ny bruger.</para>
        /// <para>Display Name: Ejer</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Ejer")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for den afdeling, der ejer kontaktpersonen.</para>
        /// <para>Display Name: Ejende afdeling</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Ejende afdeling")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for den gruppe, der ejer kontakten.</para>
        /// <para>Display Name: Ejende team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Ejende team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for den bruger, der ejer kontakten.</para>
        /// <para>Display Name: Ejende bruger</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Ejende bruger")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens personsøgernummer.</para>
        /// <para>Display Name: Personsøger</para>
        /// </summary>
        [AttributeLogicalName("pager")]
        [DisplayName("Personsøger")]
        [MaxLength(50)]
        public string Pager {
            get {
                return GetAttributeValue<string>("pager");
            }
            set {
                SetAttributeValue("pager", value);
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for den overordnede kontaktperson.</para>
        /// <para>Display Name: Overordnet kontakt</para>
        /// </summary>
        [AttributeLogicalName("parentcontactid")]
        [DisplayName("Overordnet kontakt")]
        public EntityReference ParentContactId {
            get {
                return GetAttributeValue<EntityReference>("parentcontactid");
            }
        }
        
        /// <summary>
        /// <para>Vælg det overordnede firma eller den overordnede kontakt for kontakten for at give et hurtigt link til flere oplysninger som f.eks. økonomiske oplysninger, aktiviteter og salgsmuligheder.</para>
        /// <para>Display Name: Firmanavn</para>
        /// </summary>
        [AttributeLogicalName("parentcustomerid")]
        [DisplayName("Firmanavn")]
        public EntityReference ParentCustomerId {
            get {
                return GetAttributeValue<EntityReference>("parentcustomerid");
            }
            set {
                SetAttributeValue("parentcustomerid", value);
            }
        }
        
        /// <summary>
        /// <para>Viser, om kontaktpersonen deltager i arbejdsprocesregler.</para>
        /// <para>Display Name: Deltager i arbejdsproces</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        [DisplayName("Deltager i arbejdsproces")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg betalingsbetingelserne for at angive, hvornår kunden skal betale det samlede beløb.</para>
        /// <para>Display Name: Bet.betingelser</para>
        /// </summary>
        [AttributeLogicalName("paymenttermscode")]
        [DisplayName("Bet.betingelser")]
        public Contact_PaymentTermsCode? PaymentTermsCode {
            get {
                return GetOptionSetValue<Contact_PaymentTermsCode>("paymenttermscode");
            }
            set {
                SetOptionSetValue("paymenttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den foretrukne ugedag til serviceaftaler.</para>
        /// <para>Display Name: Foretrukket dag</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmentdaycode")]
        [DisplayName("Foretrukket dag")]
        public Contact_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
            get {
                return GetOptionSetValue<Contact_PreferredAppointmentDayCode>("preferredappointmentdaycode");
            }
            set {
                SetOptionSetValue("preferredappointmentdaycode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg det foretrukne tidspunkt til serviceaftaler.</para>
        /// <para>Display Name: Foretrukket klokkeslæt</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmenttimecode")]
        [DisplayName("Foretrukket klokkeslæt")]
        public Contact_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
            get {
                return GetOptionSetValue<Contact_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
            }
            set {
                SetOptionSetValue("preferredappointmenttimecode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den foretrukne kontaktmetode.</para>
        /// <para>Display Name: Foretrukken kontaktmetode</para>
        /// </summary>
        [AttributeLogicalName("preferredcontactmethodcode")]
        [DisplayName("Foretrukken kontaktmetode")]
        public Contact_PreferredContactMethodCode? PreferredContactMethodCode {
            get {
                return GetOptionSetValue<Contact_PreferredContactMethodCode>("preferredcontactmethodcode");
            }
            set {
                SetOptionSetValue("preferredcontactmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den regelmæssige eller foretrukne kundeservicemedarbejder som reference, når du planlægger serviceaktiviteter for kontakten.</para>
        /// <para>Display Name: Foretrukken bruger</para>
        /// </summary>
        [AttributeLogicalName("preferredsystemuserid")]
        [DisplayName("Foretrukken bruger")]
        public EntityReference PreferredSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("preferredsystemuserid");
            }
            set {
                SetAttributeValue("preferredsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Kombinerer og viser kontaktens for- og efternavn, så det fulde navn kan vises i visninger og rapporter.</para>
        /// <para>Display Name: Fulde navn</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Fulde navn")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Viser processens id.</para>
        /// <para>Display Name: Proces</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Proces")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den serviceaftale (SLA), du vil anvende på kontaktposten.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Sidste SLA, der blev anvendt til denne sag. Dette felt er kun beregnet til intern brug.</para>
        /// <para>Display Name: Sidst anvendte SLA</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Sidst anvendte SLA")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens titulering for at sikre, at kontakten tituleres korrekt i salgsopkald, e-mails og marketingkampagner.</para>
        /// <para>Display Name: Titel</para>
        /// </summary>
        [AttributeLogicalName("salutation")]
        [DisplayName("Titel")]
        [MaxLength(100)]
        public string Salutation {
            get {
                return GetAttributeValue<string>("salutation");
            }
            set {
                SetAttributeValue("salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg en forsendelsesmetode til leverancer, der sendes til denne adresse.</para>
        /// <para>Display Name: Forsendelsesmåde</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        [DisplayName("Forsendelsesmåde")]
        public Contact_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv navnet på kontaktens ægtefælle eller partner som reference ved opkald, arrangementer eller anden kommunikation med kontakten.</para>
        /// <para>Display Name: Navn på ægtefælle/partner</para>
        /// </summary>
        [AttributeLogicalName("spousesname")]
        [DisplayName("Navn på ægtefælle/partner")]
        [MaxLength(100)]
        public string SpousesName {
            get {
                return GetAttributeValue<string>("spousesname");
            }
            set {
                SetAttributeValue("spousesname", value);
            }
        }
        
        /// <summary>
        /// <para>Viser fasens id.</para>
        /// <para>Display Name: (Udfaset) Navn på procesfase</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Udfaset) Navn på procesfase")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Viser, om kontakten er aktiv eller inaktiv. Inaktive kontakter er skrivebeskyttede og kan ikke redigeres, medmindre de genaktiveres.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ContactState? StateCode {
            get {
                return GetOptionSetValue<ContactState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg kontaktens status.</para>
        /// <para>Display Name: Statusårsag</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Statusårsag")]
        public Contact_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Contact_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Kun til intern brug.</para>
        /// <para>Display Name: Abonnement</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        [DisplayName("Abonnement")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv det suffiks, der bruges i kontaktens navn, f.eks. Jr. eller Sr. for at sikre, at kontakten tituleres korrekt i salgsopkald, e-mail og marketingkampagner.</para>
        /// <para>Display Name: Suffiks</para>
        /// </summary>
        [AttributeLogicalName("suffix")]
        [DisplayName("Suffiks")]
        [MaxLength(10)]
        public string Suffix {
            get {
                return GetAttributeValue<string>("suffix");
            }
            set {
                SetAttributeValue("suffix", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv hovedtelefonnummeret til denne kontakt.</para>
        /// <para>Display Name: Telefon (arbejde)</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        [DisplayName("Telefon (arbejde)")]
        [MaxLength(50)]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et andet telefonnummer til denne kontakt.</para>
        /// <para>Display Name: Telefon (privat)</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        [DisplayName("Telefon (privat)")]
        [MaxLength(50)]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et tredje telefonnummer til denne kontakt.</para>
        /// <para>Display Name: Telefon 3</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        [DisplayName("Telefon 3")]
        [MaxLength(50)]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg et område eller distrikt for kontakten til brug ved segmentering og analyser.</para>
        /// <para>Display Name: Distrikt</para>
        /// </summary>
        [AttributeLogicalName("territorycode")]
        [DisplayName("Distrikt")]
        public Contact_TerritoryCode? TerritoryCode {
            get {
                return GetOptionSetValue<Contact_TerritoryCode>("territorycode");
            }
            set {
                SetOptionSetValue("territorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Samlet tid jeg har brugt på mails (læsning og skrivning) samt møder i relation til kontakten.</para>
        /// <para>Display Name: Tidsforbrug for mig</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        [DisplayName("Tidsforbrug for mig")]
        [MaxLength(1250)]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>Kun til intern brug.</para>
        /// <para>Display Name: Versionsnummeret for tidszonereglen</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Versionsnummeret for tidszonereglen")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den lokale valuta til posten for at sikre, at budgetter rapporteres i den korrekte valuta.</para>
        /// <para>Display Name: Valuta</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Valuta")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Kun til intern brug.</para>
        /// <para>Display Name: (Udfaset) Gennemløbet sti</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Udfaset) Gennemløbet sti")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Den tidszonekode, der var i brug ved oprettelse af posten.</para>
        /// <para>Display Name: Tidszonekode til UTC-konvertering</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("Tidszonekode til UTC-konvertering")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Versionsnummeret for kontakten.</para>
        /// <para>Display Name: Versionsnummer</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Versionsnummer")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens forretningswebsted eller personlige websted eller URL-adresse til blog.</para>
        /// <para>Display Name: Websted</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Websted")]
        [MaxLength(200)]
        public string WebSiteUrl {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den fonestiske stavemåde for kontaktens fornavn, hvis navnet er angivet på japansk, for at sikre, at navnet udtales korrekt i telefonopkald med kontakten.</para>
        /// <para>Display Name: Yomi-fornavn</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        [DisplayName("Yomi-fornavn")]
        [MaxLength(150)]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Viser kontaktens kombinerede Yomi-fornavn og -efternavn, så det fulde fonetiske navn kan vises i visninger og rapporter.</para>
        /// <para>Display Name: Yomi – Fulde navn</para>
        /// </summary>
        [AttributeLogicalName("yomifullname")]
        [DisplayName("Yomi – Fulde navn")]
        [MaxLength(450)]
        public string YomiFullName {
            get {
                return GetAttributeValue<string>("yomifullname");
            }
        }
        
        /// <summary>
        /// <para>Angiv den fonestiske stavemåde for kontaktens efternavn, hvis navnet er angivet på japansk, for at sikre, at navnet udtales korrekt i telefonopkald med kontakten.</para>
        /// <para>Display Name: Yomi-efternavn</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        [DisplayName("Yomi-efternavn")]
        [MaxLength(150)]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den fonestiske stavemåde for kontaktens mellemnavn, hvis navnet er angivet på japansk, for at sikre, at navnet udtales korrekt i telefonopkald med kontakten.</para>
        /// <para>Display Name: Yomi-mellemnavn</para>
        /// </summary>
        [AttributeLogicalName("yomimiddlename")]
        [DisplayName("Yomi-mellemnavn")]
        [MaxLength(150)]
        public string YomiMiddleName {
            get {
                return GetAttributeValue<string>("yomimiddlename");
            }
            set {
                SetAttributeValue("yomimiddlename", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Bekræft fjern adgangskode</para>
        /// </summary>
        [AttributeLogicalName("adx_confirmremovepassword")]
        [DisplayName("Bekræft fjern adgangskode")]
        public bool? adx_ConfirmRemovePassword {
            get {
                return GetAttributeValue<bool?>("adx_confirmremovepassword");
            }
            set {
                SetAttributeValue("adx_confirmremovepassword", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Kopi af offentlig profil</para>
        /// </summary>
        [AttributeLogicalName("adx_publicprofilecopy")]
        [DisplayName("Kopi af offentlig profil")]
        public string adx_PublicProfileCopy {
            get {
                return GetAttributeValue<string>("adx_publicprofilecopy");
            }
            set {
                SetAttributeValue("adx_publicprofilecopy", value);
            }
        }
        
        /// <summary>
        /// <para>Viser det aktuelle antal mislykkede forsøg på brug af adgangskode for kontakten.</para>
        /// <para>Display Name: Antal mislykkede adgangsforsøg</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_accessfailedcount")]
        [DisplayName("Antal mislykkede adgangsforsøg")]
        [Range(-2147483648, 2147483647)]
        public int? adx_identity_accessfailedcount {
            get {
                return GetAttributeValue<int?>("adx_identity_accessfailedcount");
            }
            set {
                SetAttributeValue("adx_identity_accessfailedcount", value);
            }
        }
        
        /// <summary>
        /// <para>Bestemmer, om mailen bliver bekræftet af kontakten.</para>
        /// <para>Display Name: Bekræftet mailadresse</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_emailaddress1confirmed")]
        [DisplayName("Bekræftet mailadresse")]
        public bool? adx_identity_emailaddress1confirmed {
            get {
                return GetAttributeValue<bool?>("adx_identity_emailaddress1confirmed");
            }
            set {
                SetAttributeValue("adx_identity_emailaddress1confirmed", value);
            }
        }
        
        /// <summary>
        /// <para>Angiver den sidste dato og klokkeslæt for den bruger, der er logget på en portal.</para>
        /// <para>Display Name: Sidste vellykkede logon</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_lastsuccessfullogin")]
        [DisplayName("Sidste vellykkede logon")]
        public DateTime? adx_identity_lastsuccessfullogin {
            get {
                return GetAttributeValue<DateTime?>("adx_identity_lastsuccessfullogin");
            }
            set {
                SetAttributeValue("adx_identity_lastsuccessfullogin", value);
            }
        }
        
        /// <summary>
        /// <para>Angiver, at kontakten ikke længere kan logge på portalen med den lokale konto.</para>
        /// <para>Display Name: Lokalt logon er deaktiveret</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_locallogindisabled")]
        [DisplayName("Lokalt logon er deaktiveret")]
        public bool? adx_identity_locallogindisabled {
            get {
                return GetAttributeValue<bool?>("adx_identity_locallogindisabled");
            }
            set {
                SetAttributeValue("adx_identity_locallogindisabled", value);
            }
        }
        
        /// <summary>
        /// <para>Bestemmer, om denne kontakt vil spore mislykkede adgangsforsøg og låses efter for mange mislykkede forsøg. Du kan forhindre, at kontakten låses ved at deaktivere denne indstilling.</para>
        /// <para>Display Name: Spærring er aktiveret</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_lockoutenabled")]
        [DisplayName("Spærring er aktiveret")]
        public bool? adx_identity_lockoutenabled {
            get {
                return GetAttributeValue<bool?>("adx_identity_lockoutenabled");
            }
            set {
                SetAttributeValue("adx_identity_lockoutenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Viser det tidspunkt, hvor låsen fjernes fra den låste kontakt.</para>
        /// <para>Display Name: Slutdato for spærring</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_lockoutenddate")]
        [DisplayName("Slutdato for spærring")]
        public DateTime? adx_identity_lockoutenddate {
            get {
                return GetAttributeValue<DateTime?>("adx_identity_lockoutenddate");
            }
            set {
                SetAttributeValue("adx_identity_lockoutenddate", value);
            }
        }
        
        /// <summary>
        /// <para>Bestemmer, om webgodkendelse er aktiveret for kontakten.</para>
        /// <para>Display Name: Logon er aktiveret</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_logonenabled")]
        [DisplayName("Logon er aktiveret")]
        public bool? adx_identity_logonenabled {
            get {
                return GetAttributeValue<bool?>("adx_identity_logonenabled");
            }
            set {
                SetAttributeValue("adx_identity_logonenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Bestemmer, om telefonnummeret bliver bekræftet af kontakten.</para>
        /// <para>Display Name: Mobiltelefon bekræftet</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_mobilephoneconfirmed")]
        [DisplayName("Mobiltelefon bekræftet")]
        public bool? adx_identity_mobilephoneconfirmed {
            get {
                return GetAttributeValue<bool?>("adx_identity_mobilephoneconfirmed");
            }
            set {
                SetAttributeValue("adx_identity_mobilephoneconfirmed", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Input til ny adgangskode</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_newpassword")]
        [DisplayName("Input til ny adgangskode")]
        [MaxLength(100)]
        public string adx_identity_newpassword {
            get {
                return GetAttributeValue<string>("adx_identity_newpassword");
            }
            set {
                SetAttributeValue("adx_identity_newpassword", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Adgangskode-hash</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_passwordhash")]
        [DisplayName("Adgangskode-hash")]
        [MaxLength(128)]
        public string adx_identity_passwordhash {
            get {
                return GetAttributeValue<string>("adx_identity_passwordhash");
            }
            set {
                SetAttributeValue("adx_identity_passwordhash", value);
            }
        }
        
        /// <summary>
        /// <para>Et token, der bruges til at styre webgodkendelsessessionen.</para>
        /// <para>Display Name: Sikkerhedsstempel</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_securitystamp")]
        [DisplayName("Sikkerhedsstempel")]
        [MaxLength(100)]
        public string adx_identity_securitystamp {
            get {
                return GetAttributeValue<string>("adx_identity_securitystamp");
            }
            set {
                SetAttributeValue("adx_identity_securitystamp", value);
            }
        }
        
        /// <summary>
        /// <para>Bestemmer, om to faktor-godkendelse aktiveres for kontakten.</para>
        /// <para>Display Name: To faktor-godkendelse er aktiveret</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_twofactorenabled")]
        [DisplayName("To faktor-godkendelse er aktiveret")]
        public bool? adx_identity_twofactorenabled {
            get {
                return GetAttributeValue<bool?>("adx_identity_twofactorenabled");
            }
            set {
                SetAttributeValue("adx_identity_twofactorenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Viser bruger-id'et til lokal webgodkendelse.</para>
        /// <para>Display Name: Brugernavn</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_username")]
        [DisplayName("Brugernavn")]
        [MaxLength(100)]
        public string adx_identity_username {
            get {
                return GetAttributeValue<string>("adx_identity_username");
            }
            set {
                SetAttributeValue("adx_identity_username", value);
            }
        }
        
        /// <summary>
        /// <para>Brugerens foretrukne portal-LCID</para>
        /// <para>Display Name: Foretrukket LCID (udfaset)</para>
        /// </summary>
        [AttributeLogicalName("adx_preferredlcid")]
        [DisplayName("Foretrukket LCID (udfaset)")]
        [Range(-2147483648, 2147483647)]
        public int? adx_preferredlcid {
            get {
                return GetAttributeValue<int?>("adx_preferredlcid");
            }
            set {
                SetAttributeValue("adx_preferredlcid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Besked om profil</para>
        /// </summary>
        [AttributeLogicalName("adx_profilealert")]
        [DisplayName("Besked om profil")]
        public bool? adx_profilealert {
            get {
                return GetAttributeValue<bool?>("adx_profilealert");
            }
            set {
                SetAttributeValue("adx_profilealert", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Dato for profilbesked</para>
        /// </summary>
        [AttributeLogicalName("adx_profilealertdate")]
        [DisplayName("Dato for profilbesked")]
        public DateTime? adx_profilealertdate {
            get {
                return GetAttributeValue<DateTime?>("adx_profilealertdate");
            }
            set {
                SetAttributeValue("adx_profilealertdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Instruktioner til profilbesked</para>
        /// </summary>
        [AttributeLogicalName("adx_profilealertinstructions")]
        [DisplayName("Instruktioner til profilbesked")]
        public string adx_profilealertinstructions {
            get {
                return GetAttributeValue<string>("adx_profilealertinstructions");
            }
            set {
                SetAttributeValue("adx_profilealertinstructions", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Profil ændret den</para>
        /// </summary>
        [AttributeLogicalName("adx_profilemodifiedon")]
        [DisplayName("Profil ændret den")]
        public DateTime? adx_profilemodifiedon {
            get {
                return GetAttributeValue<DateTime?>("adx_profilemodifiedon");
            }
            set {
                SetAttributeValue("adx_profilemodifiedon", value);
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for det firma, der er tilknyttet Kontakt.</para>
        /// <para>Display Name: Administration af partnere</para>
        /// </summary>
        [AttributeLogicalName("msa_managingpartnerid")]
        [DisplayName("Administration af partnere")]
        public EntityReference msa_managingpartnerid {
            get {
                return GetAttributeValue<EntityReference>("msa_managingpartnerid");
            }
            set {
                SetAttributeValue("msa_managingpartnerid", value);
            }
        }
        
        /// <summary>
        /// <para>Angiver, at kontakten har frameldt sig websporing.</para>
        /// <para>Display Name: Deaktiver websporing</para>
        /// </summary>
        [AttributeLogicalName("msdyn_disablewebtracking")]
        [DisplayName("Deaktiver websporing")]
        public bool? msdyn_disablewebtracking {
            get {
                return GetAttributeValue<bool?>("msdyn_disablewebtracking");
            }
            set {
                SetAttributeValue("msdyn_disablewebtracking", value);
            }
        }
        
        /// <summary>
        /// <para>Angiver, at kontakten betragtes som mindreårig i henhold til de lokale bestemmelser.</para>
        /// <para>Display Name: Er mindreårig</para>
        /// </summary>
        [AttributeLogicalName("msdyn_isminor")]
        [DisplayName("Er mindreårig")]
        public bool? msdyn_isminor {
            get {
                return GetAttributeValue<bool?>("msdyn_isminor");
            }
            set {
                SetAttributeValue("msdyn_isminor", value);
            }
        }
        
        /// <summary>
        /// <para>Angiver, at kontakten betragtes som mindreårig i henhold til de lokale bestemmelser og har forældresamtykke.</para>
        /// <para>Display Name: Er mindreårig med forældresamtykke</para>
        /// </summary>
        [AttributeLogicalName("msdyn_isminorwithparentalconsent")]
        [DisplayName("Er mindreårig med forældresamtykke")]
        public bool? msdyn_isminorwithparentalconsent {
            get {
                return GetAttributeValue<bool?>("msdyn_isminorwithparentalconsent");
            }
            set {
                SetAttributeValue("msdyn_isminorwithparentalconsent", value);
            }
        }
        
        /// <summary>
        /// <para>Angiver den dato og det klokkeslæt, hvor personen accepterede vilkårene og betingelserne for portalen.</para>
        /// <para>Display Name: Aftaledato for portalvilkår</para>
        /// </summary>
        [AttributeLogicalName("msdyn_portaltermsagreementdate")]
        [DisplayName("Aftaledato for portalvilkår")]
        public DateTime? msdyn_portaltermsagreementdate {
            get {
                return GetAttributeValue<DateTime?>("msdyn_portaltermsagreementdate");
            }
            set {
                SetAttributeValue("msdyn_portaltermsagreementdate", value);
            }
        }
        
        /// <summary>
        /// <para>Brugerens foretrukne portalsprog</para>
        /// <para>Display Name: Foretrukket sprog</para>
        /// </summary>
        [AttributeLogicalName("mspp_userpreferredlcid")]
        [DisplayName("Foretrukket sprog")]
        public Powerpagelanguages? mspp_userpreferredlcid {
            get {
                return GetOptionSetValue<Powerpagelanguages>("mspp_userpreferredlcid");
            }
            set {
                SetOptionSetValue("mspp_userpreferredlcid", value);
            }
        }
        
        [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referenced)]
        public IEnumerable<Contact> Referencedcontact_customer_contacts {
            get {
                return GetRelatedEntities<Contact>("contact_customer_contacts", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("contact_customer_contacts", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("contact_master_contact", EntityRole.Referenced)]
        public IEnumerable<Contact> Referencedcontact_master_contact {
            get {
                return GetRelatedEntities<Contact>("contact_master_contact", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("contact_master_contact", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("parentcustomerid")]
        [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referencing)]
        public Contact Referencingcontact_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("contact_customer_contacts", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("contact_customer_contacts", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("contact_master_contact", EntityRole.Referencing)]
        public Contact Referencingcontact_master_contact {
            get {
                return GetRelatedEntity<Contact>("contact_master_contact", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("contact_master_contact", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("account_primary_contact")]
        public IEnumerable<Account> account_primary_contact {
            get {
                return GetRelatedEntities<Account>("account_primary_contact", null);
            }
            set {
                SetRelatedEntities("account_primary_contact", null, value);
            }
        }
        
        [AttributeLogicalName("parentcustomerid")]
        [RelationshipSchemaName("contact_customer_accounts")]
        public Account contact_customer_accounts {
            get {
                return GetRelatedEntity<Account>("contact_customer_accounts", null);
            }
            set {
                SetRelatedEntity("contact_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("msa_managingpartnerid")]
        [RelationshipSchemaName("msa_contact_managingpartner")]
        public Account msa_contact_managingpartner {
            get {
                return GetRelatedEntity<Account>("msa_contact_managingpartner", null);
            }
            set {
                SetRelatedEntity("msa_contact_managingpartner", null, value);
            }
        }
        
        public static Contact Retrieve(IOrganizationService service, Guid id, params Expression<Func<Contact,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    public partial class Xrm : ExtendedOrganizationServiceContext {
        
        public Xrm(IOrganizationService service) : 
                base(service) {
        }
        
        public IQueryable<Account> AccountSet {
            get {
                return CreateQuery<Account>();
            }
        }
        
        public IQueryable<Contact> ContactSet {
            get {
                return CreateQuery<Contact>();
            }
        }
    }
    
    [DataContract()]
    public enum AccountState {
        
        [EnumMember()]
        [OptionSetMetadata("Aktiv", Index=0, Lcid=1030)]
        Aktiv = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inaktiv", Index=1, Lcid=1030)]
        Inaktiv = 1,
    }
    
    [DataContract()]
    public enum Account_AccountCategoryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Foretrukken kunde", Index=0, Lcid=1030)]
        Foretrukkenkunde = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Standard", Index=1, Lcid=1030)]
        Standard = 2,
    }
    
    [DataContract()]
    public enum Account_AccountClassificationCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Account_AccountRatingCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Account_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Faktura til", Index=0, Lcid=1030)]
        Fakturatil = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Lever til", Index=1, Lcid=1030)]
        Levertil = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Primær", Index=2, Lcid=1030)]
        Primær = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Andet", Index=3, Lcid=1030)]
        Andet = 4,
    }
    
    [DataContract()]
    public enum Account_Address1_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("FOB", Index=0, Lcid=1030)]
        FOB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Uden beregning", Index=1, Lcid=1030)]
        Udenberegning = 2,
    }
    
    [DataContract()]
    public enum Account_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Luftfragt", Index=0, Lcid=1030)]
        Luftfragt = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DHL", Index=1, Lcid=1030)]
        DHL = 2,
        
        [EnumMember()]
        [OptionSetMetadata("FedEx", Index=2, Lcid=1030)]
        FedEx = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UPS", Index=3, Lcid=1030)]
        UPS = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Alm. post", Index=4, Lcid=1030)]
        Almpost = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Andet", Index=5, Lcid=1030)]
        Andet = 8,
    }
    
    [DataContract()]
    public enum Account_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Account_Address2_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Account_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Account_BusinessTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Account_CustomerSizeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Account_CustomerTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Konkurrent", Index=0, Lcid=1030)]
        Konkurrent = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Konsulent", Index=1, Lcid=1030)]
        Konsulent = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Kunde", Index=2, Lcid=1030)]
        Kunde = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Investor", Index=3, Lcid=1030)]
        Investor = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Partner", Index=4, Lcid=1030)]
        Partner = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Person, der øver indflydelse", Index=5, Lcid=1030)]
        Personderøverindflydelse = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Tryk på", Index=6, Lcid=1030)]
        Trykpå = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Kundeemne", Index=7, Lcid=1030)]
        Kundeemne = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Forhandler", Index=8, Lcid=1030)]
        Forhandler = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Kreditor", Index=9, Lcid=1030)]
        Kreditor = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Leverandør", Index=10, Lcid=1030)]
        Leverandør = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Andet", Index=11, Lcid=1030)]
        Andet = 12,
    }
    
    [DataContract()]
    public enum Account_IndustryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Landbrug, jagt, skovbrug og fiskeri", Index=0, Lcid=1030)]
        Landbrugjagtskovbrugogfiskeri = 34,
        
        [EnumMember()]
        [OptionSetMetadata("Energi og vand", Index=1, Lcid=1030)]
        Energiogvand = 35,
        
        [EnumMember()]
        [OptionSetMetadata("Udvinding og forarbejdning af ikke-energetiske mineraler og derivater; kemisk ind" +
            "ustri", Index=2, Lcid=1030)]
        Udvindingogforarbejdningafikkeenergetiskemineralerogderivaterkemiskindustri = 36,
        
        [EnumMember()]
        [OptionSetMetadata("Metalforarbejdende industri, finmekanisk industri", Index=3, Lcid=1030)]
        Metalforarbejdendeindustrifinmekaniskindustri = 37,
        
        [EnumMember()]
        [OptionSetMetadata("Anden fremstillingsvirksomhed", Index=4, Lcid=1030)]
        Andenfremstillingsvirksomhed = 38,
        
        [EnumMember()]
        [OptionSetMetadata("Bygge- og anlægsvirksomhed", Index=5, Lcid=1030)]
        Byggeoganlægsvirksomhed = 39,
        
        [EnumMember()]
        [OptionSetMetadata("Handel; restaurations- og hotelvirksomhed; reparation", Index=6, Lcid=1030)]
        Handelrestaurationsoghotelvirksomhedreparation = 40,
        
        [EnumMember()]
        [OptionSetMetadata("Transport og kommunikation", Index=7, Lcid=1030)]
        Transportogkommunikation = 41,
        
        [EnumMember()]
        [OptionSetMetadata("Kredit-, finansierings- og forsikringsvirksomhed, forretningsservice, udlejning", Index=8, Lcid=1030)]
        Kreditfinansieringsogforsikringsvirksomhedforretningsserviceudlejning = 42,
        
        [EnumMember()]
        [OptionSetMetadata("Andre tjenesteydelser", Index=9, Lcid=1030)]
        Andretjenesteydelser = 43,
    }
    
    [DataContract()]
    public enum Account_OwnershipCode {
        
        [EnumMember()]
        [OptionSetMetadata("Offentligt", Index=0, Lcid=1030)]
        Offentligt = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Privat", Index=1, Lcid=1030)]
        Privat = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Datterselskab", Index=2, Lcid=1030)]
        Datterselskab = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Andet", Index=3, Lcid=1030)]
        Andet = 4,
    }
    
    [DataContract()]
    public enum Account_PaymentTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Netto 30 dage", Index=0, Lcid=1030)]
        Netto30dage = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Netto 8 dage", Index=1, Lcid=1030)]
        Netto8dage = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Netto 14 dage", Index=2, Lcid=1030)]
        Netto14dage = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Netto kontant", Index=3, Lcid=1030)]
        Nettokontant = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Løbende måned + 14 dage", Index=4, Lcid=1030)]
        Løbendemåned14dage = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Løbende måned + 8 dage", Index=5, Lcid=1030)]
        Løbendemåned8dage = 12,
    }
    
    [DataContract()]
    public enum Account_PreferredAppointmentDayCode {
        
        [EnumMember()]
        [OptionSetMetadata("Søndag", Index=0, Lcid=1030)]
        Søndag = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Mandag", Index=1, Lcid=1030)]
        Mandag = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tirsdag", Index=2, Lcid=1030)]
        Tirsdag = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Onsdag", Index=3, Lcid=1030)]
        Onsdag = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Torsdag", Index=4, Lcid=1030)]
        Torsdag = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Fredag", Index=5, Lcid=1030)]
        Fredag = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Lørdag", Index=6, Lcid=1030)]
        Lørdag = 6,
    }
    
    [DataContract()]
    public enum Account_PreferredAppointmentTimeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Morgen", Index=0, Lcid=1030)]
        Morgen = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Eftermiddag", Index=1, Lcid=1030)]
        Eftermiddag = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Aften", Index=2, Lcid=1030)]
        Aften = 3,
    }
    
    [DataContract()]
    public enum Account_PreferredContactMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Ethvert", Index=0, Lcid=1030)]
        Ethvert = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Mail", Index=1, Lcid=1030)]
        Mail = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Telefon", Index=2, Lcid=1030)]
        Telefon = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=3, Lcid=1030)]
        Fax = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Post", Index=4, Lcid=1030)]
        Post = 5,
    }
    
    [DataContract()]
    public enum Account_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Account_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Aktiv", Index=0, Lcid=1030)]
        Aktiv = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inaktiv", Index=1, Lcid=1030)]
        Inaktiv = 2,
    }
    
    [DataContract()]
    public enum Account_TerritoryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum ContactState {
        
        [EnumMember()]
        [OptionSetMetadata("Aktiv", Index=0, Lcid=1030)]
        Aktiv = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inaktiv", Index=1, Lcid=1030)]
        Inaktiv = 1,
    }
    
    [DataContract()]
    public enum Contact_AccountRoleCode {
        
        [EnumMember()]
        [OptionSetMetadata("Beslutningstager", Index=0, Lcid=1030)]
        Beslutningstager = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Medarbejder", Index=1, Lcid=1030)]
        Medarbejder = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Person, der øver indflydelse", Index=2, Lcid=1030)]
        Personderøverindflydelse = 3,
    }
    
    [DataContract()]
    public enum Contact_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Faktura til", Index=0, Lcid=1030)]
        Fakturatil = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Lever til", Index=1, Lcid=1030)]
        Levertil = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Primær", Index=2, Lcid=1030)]
        Primær = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Andet", Index=3, Lcid=1030)]
        Andet = 4,
    }
    
    [DataContract()]
    public enum Contact_Address1_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("FOB", Index=0, Lcid=1030)]
        FOB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Uden beregning", Index=1, Lcid=1030)]
        Udenberegning = 2,
    }
    
    [DataContract()]
    public enum Contact_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Luftfragt", Index=0, Lcid=1030)]
        Luftfragt = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DHL", Index=1, Lcid=1030)]
        DHL = 2,
        
        [EnumMember()]
        [OptionSetMetadata("FedEx", Index=2, Lcid=1030)]
        FedEx = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UPS", Index=3, Lcid=1030)]
        UPS = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Alm. post", Index=4, Lcid=1030)]
        Almpost = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Andet", Index=5, Lcid=1030)]
        Andet = 8,
    }
    
    [DataContract()]
    public enum Contact_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Contact_Address2_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Contact_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Contact_CustomerSizeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Contact_CustomerTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Contact_EducationCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Contact_FamilyStatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Single", Index=0, Lcid=1030)]
        Single = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Gift", Index=1, Lcid=1030)]
        Gift = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Skilt", Index=2, Lcid=1030)]
        Skilt = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Enkestand", Index=3, Lcid=1030)]
        Enkestand = 4,
    }
    
    [DataContract()]
    public enum Contact_GenderCode {
        
        [EnumMember()]
        [OptionSetMetadata("Mand", Index=0, Lcid=1030)]
        Mand = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Kvinde", Index=1, Lcid=1030)]
        Kvinde = 2,
    }
    
    [DataContract()]
    public enum Contact_HasChildrenCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Contact_LeadSourceCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Contact_PaymentTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Netto 30 dage", Index=0, Lcid=1030)]
        Netto30dage = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Netto 8 dage", Index=1, Lcid=1030)]
        Netto8dage = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Netto 14 dage", Index=2, Lcid=1030)]
        Netto14dage = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Netto kontant", Index=3, Lcid=1030)]
        Nettokontant = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Løbende måned + 14 dage", Index=4, Lcid=1030)]
        Løbendemåned14dage = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Løbende måned + 8 dage", Index=5, Lcid=1030)]
        Løbendemåned8dage = 12,
    }
    
    [DataContract()]
    public enum Contact_PreferredAppointmentDayCode {
        
        [EnumMember()]
        [OptionSetMetadata("Søndag", Index=0, Lcid=1030)]
        Søndag = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Mandag", Index=1, Lcid=1030)]
        Mandag = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tirsdag", Index=2, Lcid=1030)]
        Tirsdag = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Onsdag", Index=3, Lcid=1030)]
        Onsdag = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Torsdag", Index=4, Lcid=1030)]
        Torsdag = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Fredag", Index=5, Lcid=1030)]
        Fredag = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Lørdag", Index=6, Lcid=1030)]
        Lørdag = 6,
    }
    
    [DataContract()]
    public enum Contact_PreferredAppointmentTimeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Morgen", Index=0, Lcid=1030)]
        Morgen = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Eftermiddag", Index=1, Lcid=1030)]
        Eftermiddag = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Aften", Index=2, Lcid=1030)]
        Aften = 3,
    }
    
    [DataContract()]
    public enum Contact_PreferredContactMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Ethvert", Index=0, Lcid=1030)]
        Ethvert = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Mail", Index=1, Lcid=1030)]
        Mail = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Telefon", Index=2, Lcid=1030)]
        Telefon = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=3, Lcid=1030)]
        Fax = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Post", Index=4, Lcid=1030)]
        Post = 5,
    }
    
    [DataContract()]
    public enum Contact_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Contact_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Aktiv", Index=0, Lcid=1030)]
        Aktiv = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inaktiv", Index=1, Lcid=1030)]
        Inaktiv = 2,
    }
    
    [DataContract()]
    public enum Contact_TerritoryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0, Lcid=1030)]
        Standardværdi = 1,
    }
    
    [DataContract()]
    public enum Powerpagelanguages {
        
        [EnumMember()]
        [OptionSetMetadata("Arabisk", Index=0, Lcid=1030, Description="", Color="#0000ff")]
        Arabisk = 1025,
        
        [EnumMember()]
        [OptionSetMetadata("Bulgarsk - Bulgarien", Index=2, Lcid=1030, Description="", Color="#0000ff")]
        BulgarskBulgarien = 1026,
        
        [EnumMember()]
        [OptionSetMetadata("Catalansk - catalansk", Index=3, Lcid=1030, Description="", Color="#0000ff")]
        Catalanskcatalansk = 1027,
        
        [EnumMember()]
        [OptionSetMetadata("Kinesisk - traditionelt", Index=6, Lcid=1030, Description="", Color="#0000ff")]
        Kinesisktraditionelt = 1028,
        
        [EnumMember()]
        [OptionSetMetadata("Tjekkisk – Den Tjekkiske Republik", Index=8, Lcid=1030, Description="", Color="#0000ff")]
        TjekkiskDenTjekkiskeRepublik = 1029,
        
        [EnumMember()]
        [OptionSetMetadata("Dansk - Danmark", Index=9, Lcid=1030, Description="", Color="#0000ff")]
        DanskDanmark = 1030,
        
        [EnumMember()]
        [OptionSetMetadata("Tysk - Tyskland", Index=16, Lcid=1030, Description="", Color="#0000ff")]
        TyskTyskland = 1031,
        
        [EnumMember()]
        [OptionSetMetadata("Græsk - Grækenland", Index=17, Lcid=1030, Description="", Color="#0000ff")]
        GræskGrækenland = 1032,
        
        [EnumMember()]
        [OptionSetMetadata("Engelsk", Index=11, Lcid=1030, Description="", Color="#0000ff")]
        Engelsk = 1033,
        
        [EnumMember()]
        [OptionSetMetadata("Finsk – Finland", Index=13, Lcid=1030, Description="", Color="#0000ff")]
        FinskFinland = 1035,
        
        [EnumMember()]
        [OptionSetMetadata("Fransk - Frankrig", Index=14, Lcid=1030, Description="", Color="#0000ff")]
        FranskFrankrig = 1036,
        
        [EnumMember()]
        [OptionSetMetadata("Hebraisk", Index=18, Lcid=1030, Description="", Color="#0000ff")]
        Hebraisk = 1037,
        
        [EnumMember()]
        [OptionSetMetadata("Ungarsk - Ungarn", Index=20, Lcid=1030, Description="", Color="#0000ff")]
        UngarskUngarn = 1038,
        
        [EnumMember()]
        [OptionSetMetadata("Italiensk - Italien", Index=22, Lcid=1030, Description="", Color="#0000ff")]
        ItalienskItalien = 1040,
        
        [EnumMember()]
        [OptionSetMetadata("Japansk – Japan", Index=23, Lcid=1030, Description="", Color="#0000ff")]
        JapanskJapan = 1041,
        
        [EnumMember()]
        [OptionSetMetadata("Koreansk – Sydkorea", Index=25, Lcid=1030, Description="", Color="#0000ff")]
        KoreanskSydkorea = 1042,
        
        [EnumMember()]
        [OptionSetMetadata("Hollandsk – Nederlandene", Index=10, Lcid=1030, Description="", Color="#0000ff")]
        HollandskNederlandene = 1043,
        
        [EnumMember()]
        [OptionSetMetadata("Norsk (bokmål) – Norge", Index=29, Lcid=1030, Description="", Color="#0000ff")]
        NorskbokmålNorge = 1044,
        
        [EnumMember()]
        [OptionSetMetadata("Polsk - Polen", Index=30, Lcid=1030, Description="", Color="#0000ff")]
        PolskPolen = 1045,
        
        [EnumMember()]
        [OptionSetMetadata("Portugisisk - Brasilien", Index=31, Lcid=1030, Description="", Color="#0000ff")]
        PortugisiskBrasilien = 1046,
        
        [EnumMember()]
        [OptionSetMetadata("Rumænsk - Rumænien", Index=33, Lcid=1030, Description="", Color="#0000ff")]
        RumænskRumænien = 1048,
        
        [EnumMember()]
        [OptionSetMetadata("Russisk - Rusland", Index=34, Lcid=1030, Description="", Color="#0000ff")]
        RussiskRusland = 1049,
        
        [EnumMember()]
        [OptionSetMetadata("Kroatisk - Kroatien", Index=7, Lcid=1030, Description="", Color="#0000ff")]
        KroatiskKroatien = 1050,
        
        [EnumMember()]
        [OptionSetMetadata("Slovakisk - Slovakiet", Index=37, Lcid=1030, Description="", Color="#0000ff")]
        SlovakiskSlovakiet = 1051,
        
        [EnumMember()]
        [OptionSetMetadata("Svensk - Sverige", Index=40, Lcid=1030, Description="", Color="#0000ff")]
        SvenskSverige = 1053,
        
        [EnumMember()]
        [OptionSetMetadata("Thailandsk – Thailand", Index=41, Lcid=1030, Description="", Color="#0000ff")]
        ThailandskThailand = 1054,
        
        [EnumMember()]
        [OptionSetMetadata("Tyrkisk – Tyrkiet", Index=42, Lcid=1030, Description="", Color="#0000ff")]
        TyrkiskTyrkiet = 1055,
        
        [EnumMember()]
        [OptionSetMetadata("Indonesisk - Indonesien", Index=21, Lcid=1030, Description="", Color="#0000ff")]
        IndonesiskIndonesien = 1057,
        
        [EnumMember()]
        [OptionSetMetadata("Ukrainsk - Ukraine", Index=43, Lcid=1030, Description="", Color="#0000ff")]
        UkrainskUkraine = 1058,
        
        [EnumMember()]
        [OptionSetMetadata("Slovensk - Slovenien", Index=38, Lcid=1030, Description="", Color="#0000ff")]
        SlovenskSlovenien = 1060,
        
        [EnumMember()]
        [OptionSetMetadata("Estisk - Estland", Index=12, Lcid=1030, Description="", Color="#0000ff")]
        EstiskEstland = 1061,
        
        [EnumMember()]
        [OptionSetMetadata("Lettisk - Letland", Index=26, Lcid=1030, Description="", Color="#0000ff")]
        LettiskLetland = 1062,
        
        [EnumMember()]
        [OptionSetMetadata("Litauisk - Litauen", Index=27, Lcid=1030, Description="", Color="#0000ff")]
        LitauiskLitauen = 1063,
        
        [EnumMember()]
        [OptionSetMetadata("Vietnamesisk - Vietnam", Index=44, Lcid=1030, Description="", Color="#0000ff")]
        VietnamesiskVietnam = 1066,
        
        [EnumMember()]
        [OptionSetMetadata("Baskisk - baskisk", Index=1, Lcid=1030, Description="", Color="#0000ff")]
        Baskiskbaskisk = 1069,
        
        [EnumMember()]
        [OptionSetMetadata("Hindi - Indien", Index=19, Lcid=1030, Description="", Color="#0000ff")]
        HindiIndien = 1081,
        
        [EnumMember()]
        [OptionSetMetadata("Malajisk – Malaysia", Index=28, Lcid=1030, Description="", Color="#0000ff")]
        MalajiskMalaysia = 1086,
        
        [EnumMember()]
        [OptionSetMetadata("Kasakhisk – Kasakhstan", Index=24, Lcid=1030, Description="", Color="#0000ff")]
        KasakhiskKasakhstan = 1087,
        
        [EnumMember()]
        [OptionSetMetadata("Galicisk – Spanien", Index=15, Lcid=1030, Description="", Color="#0000ff")]
        GaliciskSpanien = 1110,
        
        [EnumMember()]
        [OptionSetMetadata("Kinesisk - Kina", Index=4, Lcid=1030, Description="", Color="#0000ff")]
        KinesiskKina = 2052,
        
        [EnumMember()]
        [OptionSetMetadata("Portugisisk - Portugal", Index=32, Lcid=1030, Description="", Color="#0000ff")]
        PortugisiskPortugal = 2070,
        
        [EnumMember()]
        [OptionSetMetadata("Serbisk (latinsk) – Serbien", Index=36, Lcid=1030, Description="", Color="#0000ff")]
        SerbisklatinskSerbien = 2074,
        
        [EnumMember()]
        [OptionSetMetadata("Kinesisk – SAR Hongkong", Index=5, Lcid=1030, Description="", Color="#0000ff")]
        KinesiskSARHongkong = 3076,
        
        [EnumMember()]
        [OptionSetMetadata("Spansk (traditionel sortering) - Spanien", Index=39, Lcid=1030, Description="", Color="#0000ff")]
        SpansktraditionelsorteringSpanien = 3082,
        
        [EnumMember()]
        [OptionSetMetadata("Serbisk (kyrillisk) – Serbien", Index=35, Lcid=1030, Description="", Color="#0000ff")]
        SerbiskkyrilliskSerbien = 3098,
    }
}
